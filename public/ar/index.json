[{"content":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل لا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\nما الذي يجعل Tailwind فريدة؟ في جوهرها، تعتمد Tailwind على منهجية الأدوات أولاً. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل bg-blue-500، px-4، وrounded-lg. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\nمنذ الإصدار 3، اعتمدت Tailwind الترجمة الفورية (JIT) بشكل افتراضي، حيث يتم توليد CSS الذي تستخدمه فقط. هذا يؤدي إلى بناءات فائقة السرعة وأحجام ملفات إنتاجية صغيرة جداً.\nما الجديد في Tailwind CSS 4.0+؟ تم إصدار Tailwind CSS 4.0 في يناير 2025، وقدمت إعادة كتابة ثورية مدعومة بمحرك Oxide المبني بلغة Rust. هذا أدى إلى أوقات بناء أسرع حتى 5 مرات وإعادة بناء فورية في أجزاء من الثانية.\n🔍 أبرز ميزات الإصدار 4.0: دعم CSS الحديث: ميزات مثل @layer، و@property، وcolor-mix()، واستعلامات الحاوية أصبحت مدمجة بالكامل وأساسية. إعداد يعتمد على CSS: يمكنك الآن تحديد الألوان والمسافات وغيرها من رموز التصميم باستخدام متغيرات CSS الأصلية—دون الحاجة لملفات إعداد JavaScript ثقيلة. إضافة Vite رسمية: إضافة مخصصة تضمن إعادة تحميل فورية وأداء عالي لمشاريع Vite. أدوات جديدة: دعم التحويلات ثلاثية الأبعاد، التدرجات المخروطية/الدائرية، متغيرات :not-، انتقالات @starting-style، وأحجام حقول النماذج الموسعة. تحديث v4.1 (أبريل 2025) توسّع التحديث 4.1 في التحكم الإبداعي بإضافة:\nظلال النصوص وظلال الألوان أدوات إخفاء CSS متغيرات overflow-wrap استعلامات وسائط pointer لتفاعل الأجهزة حلول بديلة عند تعطيل الجافاسكريبت لماذا يحبها المطورون في 2025 ❌ لا تضخم في CSS، ✅ بناءات سريعة: مع JIT والتنظيف المدمج، يبقى ملف CSS صغيراً وفعالاً. ⚙️ وضوح الإعداد مع متغيرات CSS: رموز التصميم متاحة كمتغيرات CSS أصلية، مما يسهل استخدامها وإعادة استخدامها وفحصها في المتصفح. 🌍 مصممة للأطر الحديثة: تندمج Tailwind بسلاسة مع أطر مثل Next.js وAstro وVue وSvelte دون فرض أنظمة مكونات معقدة. 💬 منظومة ومجتمع ضخم: من مكتبات رسمية مثل Tailwind UI وHeadless UI إلى إضافات الطرف الثالث وبيئة Tailwind Play، المنظومة تدعم المطورين على جميع المستويات. كيف تبدأ: الترقية أو مشروع جديد ✅ ترقية سريعة إلى v4.x إذا كنت تستخدم الإصدار 3.4+، استخدم دليل الترقية التلقائي الرسمي من Tailwind Labs. معظم سير العمل الحالية ستعمل مباشرة دون تعديل.\n🛠️ إعداد بسيط لمشاريع جديدة ثبّت Tailwind 4.0 أو أحدث عبر npm:\nnpm install tailwindcss ثم استوردها في ملف CSS الرئيسي:\n@import \u0026#34;tailwindcss\u0026#34;; لا حاجة لأي إعداد إضافي. ستحصل تلقائياً على اكتشاف المحتوى وجميع الميزات الحديثة بشكل افتراضي.\nأفضل الممارسات في 2025 الممارسة لماذا هي مهمة استخدم متغيرات CSS لتوحيد الثيمات عبر المكونات والتصاميم استغل استعلامات الحاوية لبناء تخطيطات متجاوبة بدون جافاسكريبت طبق متغيرات مركبة لتبسيط حالات hover/focus والتنسيق الديناميكي قلل من استخدام @apply للحفاظ على نظافة ملف الأنماط؛ استخدمه فقط للمكونات الأساسية حافظ على مسارات التنظيف لإزالة الأنماط غير المستخدمة بكفاءة خلاصة: هل تستحق Tailwind CSS التجربة؟ نعم—بكل تأكيد. Tailwind CSS في 2025 ليست مجرد أداة تنسيق أخرى، بل منظومة متكاملة تعزز الإنتاجية، وتفرض تصميماً متسقاً، وتتكيف مع معايير الويب الحديثة. الأمر ليس مجرد ضجة إعلامية—بل سرعة ومرونة ومتعة للمطور.\nسواء كنت تبني تطبيق React مع Vite، أو معرض أعمال في Astro، أو نظام تصميم من الصفر—Tailwind CSS تدعم كل ذلك.\n🚀 هل أنت مستعد للانطلاق؟ جرّب Tailwind Play لاختبار الأدوات مباشرة في المتصفح. استخدم التوثيقات الرسمية على tailwindcss.com لأدلة الترقية. جرّب ميزات الإصدار الرابع: استعلامات الحاوية، الأدوات الجديدة، ودعم الوضع الليلي. Tailwind CSS في 2025 ليست مجرد أداة مهمة—بل أصبحت أساسية.\nإذا كنت تعمل في تطوير الواجهات الأمامية، فهي أداة تستحق الإتقان.\n","permalink":"http://localhost:1313/ar/blog/posts/tailwind-css-in-2025-fast-flexible--future-ready/","section":"blog","summary":"\u003ch1 id=\"tailwind-css-في-2025-سريع-مرن-ومستعد-للمستقبل\"\u003eTailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل\u003c/h1\u003e\n\u003cp\u003eلا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\u003c/p\u003e\n\u003ch2 id=\"ما-الذي-يجعل-tailwind-فريدة\"\u003eما الذي يجعل Tailwind فريدة؟\u003c/h2\u003e\n\u003cp\u003eفي جوهرها، تعتمد Tailwind على منهجية \u003cstrong\u003eالأدوات أولاً\u003c/strong\u003e. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل \u003ccode\u003ebg-blue-500\u003c/code\u003e، \u003ccode\u003epx-4\u003c/code\u003e، و\u003ccode\u003erounded-lg\u003c/code\u003e. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\u003c/p\u003e","title":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل"},{"content":"Vite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها Vite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\n🚀 لماذا Vite سريعة جداً؟ تستفيد Vite من وحدات ES الأصلية (ESM)\rفي المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\nتستخدم esbuild\r، وهي أداة تجميع JavaScript فائقة السرعة مكتوبة بلغة Go، لمعالجة التبعيات، مما يجعلها أسرع من أدوات التجميع التقليدية مثل Webpack بما يصل إلى 10–100 مرة.\n🧠 الميزات الرئيسية تشغيل فوري للخادم: يبدأ الخادم تقريباً فوراً بغض النظر عن حجم تطبيقك. تحديث فوري للوحدات (HMR): تظهر التغييرات في المتصفح بمجرد الحفظ، دون إعادة تحميل كاملة. بناء إنتاجي محسن: يستخدم Rollup في الخلفية لإخراج إنتاجي عالي الأداء ودقيق. دعم جاهز للأطر: يعمل بسلاسة مع Vue وReact وPreact وSvelte وغيرها. إعداد بسيط ومرونة عالية: ملف الإعداد اختياري، وعند الحاجة يكون بسيطاً وبديهياً. 🛠️ كيف تبدأ مع Vite يمكنك إنشاء مشروع Vite في ثوانٍ:\nnpm create vite@latest my-app cd my-app npm install npm run dev ستحصل فوراً على خادم تطوير سريع جداً مع إعادة تحميل مباشرة.\n📦 Vite + React/Next/Vue؟ نعم — تعمل Vite بشكل رائع مع React وVue وحتى Svelte. في الواقع، يفضل العديد من المطورين Vite على Create React App أو Vue CLI بسبب سرعتها وبساطتها.\nإذا كنت تبني شيئاً باستخدام Next.js، فهي لا تزال خياراً ممتازاً للتطبيقات التي تعتمد على SSR. أما إذا كنت تطور تطبيقات صفحة واحدة (SPA) أو مواقع ثابتة، فقد توفر Vite تجربة أكثر سلاسة.\n🤔 هل يجب أن تستخدم Vite؟ إذا كنت تهتم بـ:\nدورات تطوير أسرع إعداد أبسط بناء إنتاجي عالي الأداء فالإجابة نعم، Vite مناسبة لك.\n🔚 الخلاصة Vite ليست مجرد خادم تطوير أسرع — بل هي منظومة متكاملة صُممت بعناية لتطوير الواجهات الأمامية الحديثة. ومع تطور عالم JavaScript، تبرز Vite كأداة تجمع بين السرعة والبساطة.\n💡 سواء كنت تبني معرض أعمال بسيط أو تطبيقاً إنتاجياً متقدماً، جرب Vite — قد تدمن سرعتها ولا ترضى بغيرها.\nمصادر الموقع الرسمي\rمستودع GitHub\r","permalink":"http://localhost:1313/ar/blog/posts/getting-started-with-vite-the-next-gen-frontend-build-tool/","section":"blog","summary":"\u003ch1 id=\"vite-أسرع-أداة-تطوير-للواجهات-الأمامية-ربما-لم-تكن-تعرف-أنك-بحاجة-إليها\"\u003eVite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها\u003c/h1\u003e\n\u003cp\u003eVite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"-لماذا-vite-سريعة-جدا\"\u003e🚀 لماذا Vite سريعة جداً؟\u003c/h2\u003e\n\u003cp\u003eتستفيد Vite من \r\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\r\n  وحدات ES الأصلية (ESM)\r\n\u003c/a\u003e\r\n في المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\u003c/p\u003e","title":"Vite: أسرع أداة تطوير للواجهات الأمامية قد لا تعلم أنك بحاجة إليها"},{"content":"سايبر مون هو نموذج أولي حديث لشركة تقنية خيالية متخصصة في تطوير تطبيقات الويب والموبايل، وخدمات السحابة، وتكامل الذكاء الاصطناعي. تم تصميم هذا المشروع وبرمجته كعمل ضمن معرض الأعمال، ليبرز مهاراتي في تطوير واجهات المستخدم المتجاوبة، والهندسة المعمارية القائمة على المكونات، وتصميم المواقع الموجه بالهوية البصرية.\n🛠️ التقنيات المستخدمة الإطار: Next.js (React) تصميم الواجهة: Tailwind CSS التحريكات: مكتبة AOS (Animate On Scroll) الثيمات: next-themes للوضع الليلي/النهاري النشر: Vercel ✨ الميزات الرئيسية 🌗 وضع ليلي/نهاري: تبديل سلس بين الوضعين مع حفظ التفضيل عبر الجلسات باستخدام next-themes. 🧱 تصميم معياري: مبني بمكونات React قابلة لإعادة الاستخدام لأقسام رئيسية مثل التنقل، والخدمات، وشهادات العملاء، ومعاينات المدونة. 🖼️ واجهة متحركة: تم تطبيق تأثيرات تلاشي وانزلاق أنيقة عند التمرير باستخدام مكتبة AOS لتعزيز تفاعل المستخدم. 📱 متجاوب بالكامل: تصميم يركز على الجوال أولاً مع قائمة جانبية تضمن تجربة سلسة على جميع الأجهزة. 🎨 هوية بصرية مخصصة: يستخدم التصميم خط Rajdhani ولوحة ألوان مستوحاة من الفضاء لإضفاء طابع تقني قوي وحديث. 🚀 أداء محسن: الموقع محسن لسرعة التحميل ومُستضاف على Vercel المعروفة بأدائها العالي مع تطبيقات Next.js. 💡 الهدف وفلسفة التصميم باعتباره مشروعاً لمعرض الأعمال، كان الهدف الأساسي من Cyber Moon هو إبراز القدرات التقنية والتصميمية في سياق واقعي. استُلهم التوجه البصري من الفضاء، باستخدام درجات الأزرق الداكن والرمادي الناعم ولمسات ذهبية، لخلق واجهة نظيفة وعصرية ومبهرة للعملاء أو أصحاب العمل المحتملين. يمثل هذا المشروع نموذجاً عالي الدقة لما يمكنني تقديمه.\n🚀 عرض المشروع الموقع المباشر: cyber-moon.vercel.app\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-012/","section":"projects","summary":"نموذج أولي متجاوب لشركة تقنية خيالية، يبرز بنية معمارية قائمة على المكونات باستخدام Next.js، وتصميم متجاوب مع Tailwind CSS، وتحريكات تمرير أنيقة.","title":"القمر الرقمي: نموذج أولي لشركة ناشئة في مجال التكنولوجيا الخيالية"},{"content":"تم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\nما هي React.js؟ React.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\nتركز React فقط على طبقة العرض (View) من معمارية MVC، مما يجعلها خفيفة وسهلة الدمج مع مكتبات أو أطر عمل أخرى.\nالميزات الرئيسية في React 1. بنية قائمة على المكونات تشجع React على تطوير مكونات قابلة لإعادة الاستخدام، مما يعزز صيانة الكود وقابليته للتوسع. كل مكون يدير حالته الخاصة ويعرض نفسه بناءً على تلك الحالة.\n2. JSX – جافاسكريبت XML يتيح JSX للمطورين كتابة هياكل HTML مباشرة داخل جافاسكريبت، مما يجعل الكود أسهل قراءة وصيانة.\nconst Hello = () =\u0026gt; \u0026lt;h1\u0026gt;Hello, World!\u0026lt;/h1\u0026gt;; 3. DOM افتراضي تستخدم React DOM افتراضي لتتبع التغييرات وتحديث الأجزاء المتغيرة فقط من الواجهة بكفاءة، مما يؤدي إلى عرض أسرع وأداء أفضل.\n4. ربط بيانات باتجاه واحد تطبق React ربط بيانات باتجاه واحد، أي أن البيانات تتدفق من المكون الأب إلى الأبناء، مما يجعل إدارة البيانات أكثر قابلية للتنبؤ وأسهل في التصحيح.\n5. منظومة غنية تتمتع React بمنظومة غنية تشمل أدوات مثل React Router للتنقل، وRedux لإدارة الحالة، وNext.js للعرض من جهة الخادم.\nلماذا تستخدم React؟ الكفاءة: الـ DOM الافتراضي يحسن أداء العرض. التركيبية: المكونات القابلة لإعادة الاستخدام تؤدي إلى كود أنظف وأسهل في الصيانة. مجتمع ضخم: لدى React مجتمع مطورين واسع وتوثيقات ممتازة. فرص عمل: React مطلوبة بشدة في سوق العمل، ما يجعلها مهارة ذات قيمة عالية. كيف تبدأ مع React يمكنك البدء مع React بتثبيتها عبر npm:\nnpx create-react-app my-app cd my-app npm start سيتم إعداد بيئة تطوير متكاملة مع إعادة تحميل فوري، وفحص الكود، ودعم ميزات جافاسكريبت الحديثة.\nالخلاصة تمكن React.js المطورين من بناء واجهات مستخدم سريعة وقابلة للتوسع وتفاعلية. شعبيتها وتنوع استخداماتها يجعلها تقنية أساسية في تطوير الويب الحديث. إذا كنت تطمح لأن تصبح مطور واجهات أمامية أو تعزز مهاراتك في جافاسكريبت، فإن تعلم React أمر لا غنى عنه.\n","permalink":"http://localhost:1313/ar/blog/posts/reactjs-blog-post/","section":"blog","summary":"\u003cp\u003eتم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\u003c/p\u003e\n\u003ch2 id=\"ما-هي-reactjs\"\u003eما هي React.js؟\u003c/h2\u003e\n\u003cp\u003eReact.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\u003c/p\u003e","title":"React.js: عملاق الواجهات الأمامية الذي تحتاجه في 2025"},{"content":"Why Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀 !http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\nIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where Next.js, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\nOne Framework, So Many Ways to Render This is the killer feature. With Next.js, you\u0026rsquo;re not locked into one way of doing things. You get to choose the best rendering strategy for each page.\nStatic Site Generation (SSG): Perfect for pages that don\u0026rsquo;t change often, like a blog post or a product landing page. The page is built once and served instantly from a CDN. The result? Blazing-fast load times. Server-Side Rendering (SSR): Need to show user-specific data? SSR generates the page on the server for every request, ensuring the content is always fresh. It\u0026rsquo;s ideal for dashboards and user profiles. Incremental Static Regeneration (ISR): This is the best of both worlds. You can have a static page that automatically rebuilds itself in the background after a set time. Your site stays fast, but the content is never stale. Client-Side Rendering (CSR): Still want the classic single-page app experience? You can do that too, all within the same application. This hybrid approach means you can optimize every single part of your app for maximum performance and efficiency.\nتجربة تطوير أفضل للمبرمجين !http://googleusercontent.com/image_collection/image_retrieval/7573518744484272445\nNext.js مليء بالميزات التي تجعل حياتك كمطور أكثر سهولة ومتعة.\nتوجيه قائم على الملفات: انسَ مكتبات التوجيه المعقدة. تريد صفحة جديدة على /about؟ فقط أنشئ ملفاً باسم about.js في مجلد الصفحات. بهذه البساطة والوضوح. تحديث فوري: عدّل الكود وسترى التغيير في المتصفح فوراً دون فقدان حالة المكون. هذا يجعل التطوير وتصحيح الأخطاء سريعاً للغاية. تحسينات مدمجة: يأتي Next.js مع تحسين تلقائي للصور، وتقسيم الكود، والمزيد مباشرة من البداية. يتولى المهام الثقيلة لتتمكن من التركيز على بناء الميزات. أداء يبهر المستخدمين وجوجل !http://googleusercontent.com/image_collection/image_retrieval/7999868972524234138\nفي النهاية، كل شيء يتعلق بالأداء. المواقع البطيئة تخسر المستخدمين وتحتل ترتيباً سيئاً في محركات البحث. تم بناء Next.js من الأساس ليكون سريعاً.\nمن خلال استراتيجيات العرض الذكية والتحسينات التلقائية، يساعدك Next.js على بناء مواقع تحقق نتائج عالية في مؤشرات Google Core Web Vitals. هذا يؤدي إلى ترتيب SEO أفضل، والأهم من ذلك، مستخدمون أكثر رضا لأنهم لا ينتظرون تحميل الصفحات.\n!http://googleusercontent.com/image_collection/image_retrieval/1237750557036671416\nالخلاصة Next.js ليس مجرد موضة؛ بل هو الخطوة المنطقية التالية لتطوير الويب الجاد. يجمع بين قوة React وهندسة معمارية مدروسة تركز على الأداء وتحل مشاكل المطورين الحقيقية. إذا كنت تريد بناء تطبيقات ويب سريعة وقابلة للتوسع وحديثة دون متاعب التطوير المعتادة، فـ Next.js هو أفضل مكان للانطلاق.\n","permalink":"http://localhost:1313/ar/blog/posts/next.js-is-your-new-secret-weapon-for-building-awesome-web-apps/","section":"blog","summary":"\u003ch1 id=\"why-nextjs-is-your-new-secret-weapon-for-building-awesome-web-apps-\"\u003eWhy Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀\u003c/h1\u003e\n\u003cp\u003e!http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where \u003cstrong\u003eNext.js\u003c/strong\u003e, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\u003c/p\u003e","title":"Next.js: سلاحك السري الجديد لبناء تطبيقات ويب مذهلة"},{"content":"موقعي الشخصي\n","permalink":"http://localhost:1313/ar/blog/posts/my-best-website/","section":"blog","summary":"\u003cp\u003eموقعي الشخصي\u003c/p\u003e","title":"أفضل موقع لي"},{"content":"قمت بتطوير موقع إلكتروني حديث ومتجاوب لشركة أبراج بلاتينيوم ذ.م.م.، الرائدة في تقديم حلول الألياف الضوئية والشبكات في سوريا. كان هدف المشروع إنشاء حضور رقمي احترافي يعرض خدماتهم التقنية المتقدمة ويعزز مكانتهم كلاعب رئيسي في قطاع البنية التحتية للاتصالات.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js أداة البناء: Vite التوجيه: React Router التحريكات: React Spring \u0026amp; React Typing Effect تصميم الواجهة: CSS3 النقي مع استعلامات الوسائط خدمة الخلفية: Web3Forms API (لنموذج التواصل) ✨ الميزات الرئيسية 📱 تصميم متجاوب بالكامل: يتكيف التصميم مع جميع أحجام الشاشات، مع قائمة تنقل جانبية أنيقة وقابلة للتبديل لتجربة مثالية على الجوال. 🎨 شريط تنقل ديناميكي: شريط تنقل ثابت يتحول من شفاف إلى خلفية صلبة عند التمرير، لضمان سهولة التنقل. 💼 نموذج تواصل فعال: نموذج تواصل يعمل بكفاءة يلتقط بيانات المستخدم ويرسلها مباشرة إلى بريد الإدارة باستخدام Web3Forms API. 🎬 مشغل فيديو مدمج: مشغل فيديو يظهر كنافذة منبثقة من قسم \u0026ldquo;من نحن\u0026rdquo;، لعرض محتوى مرئي تفاعلي دون مغادرة الصفحة. 💨 تمرير سلس: تم استخدام مكتبة react-scroll لتفعيل التمرير السلس عند النقر على روابط التنقل. 🖼️ أقسام تفاعلية: يحتوي الموقع على عدة أقسام تفاعلية، منها معرض صور أنيق بأربع أعمدة، وسلايدر شهادات العملاء، وبطاقات برامج تفاعلية عند المرور عليها. 💡 هدف المشروع كان الهدف الأساسي هو إنشاء واجهة رقمية احترافية توضح بوضوح خدمات أبراج بلاتينيوم المتخصصة في قطاع الألياف الضوئية. تم تصميم الموقع لتعزيز علامتهم التجارية كقائد تقني حديث وموثوق، وتوفير نقطة تواصل واضحة للعملاء المحتملين الباحثين عن حلول شبكات.\n🚀 عرض المشروع الموقع المباشر: abrajplatinum.com\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-01/","section":"projects","summary":"تم تطوير موقع إلكتروني عصري واحترافي لشركة متخصصة في حلول الألياف الضوئية والشبكات، بهدف إبراز خبراتهم التقنية وتعزيز حضورهم الرقمي.","title":"أبراج بلاتينوم: موقع لحلول الألياف الضوئية"},{"content":"رويال بلاتينيوم هو موقع واجهات وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم تطويره كتطبيق صفحة واحدة متجاوب بالكامل. ركز هذا المشروع النموذجي على ترجمة تصميم Figma الاحترافي إلى موقع عالي الأداء، مع إبراز بنية مكونات نظيفة وتنسيق دقيق باستخدام Tailwind CSS.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: Tailwind CSS أداة البناء: Vite اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🎨 تصميم دقيق مطابق للأصل: تم تنفيذ التصميم بعناية ليطابق تصميم Figma الأصلي، مع صور عالية الجودة وتدرجات أنيقة وواجهة داكنة نظيفة تعكس الاحترافية والثقة. 🧱 مكونات قابلة لإعادة الاستخدام: تم بناء الموقع على أساس مكونات قابلة لإعادة الاستخدام لإحصائيات الأعمال، والميزات، وشهادات العملاء وغيرها، لضمان كود نظيف وسهل الصيانة. 📱 متجاوب بالكامل: تم تحسينه لجميع الأجهزة مع نهج التصميم للجوال أولاً. تتقلص قائمة التنقل بسلاسة إلى قائمة قابلة للتبديل على الشاشات الصغيرة لتجربة استخدام بديهية. 🚀 سير عمل فعال: تم تطويره باستخدام أداة البناء Vite السريعة جداً لتقليل الاعتماديات وتسريع دورة التطوير. 📈 بيانات مركزية: تتم إدارة جميع المحتويات الثابتة مثل روابط التنقل ووصف الميزات في ملف ثابت مركزي، مما يجعل تحديث الموقع وصيانته سهلاً. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو إثبات القدرة على تحويل تصميم عالي الدقة من Figma إلى تطبيق ويب متكامل الوظائف، متجاوب وجذاب بصرياً. يمثل هذا العمل إضافة قوية لمحفظة الأعمال، ويبرز أحدث ممارسات تطوير الواجهات الأمامية، والاهتمام الدقيق بتفاصيل تجربة المستخدم، وإتقان React.js وTailwind CSS.\n🚀 عرض المشروع الموقع المباشر: royalplatinum.surge.sh\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-02/","section":"projects","summary":"موقع واجهات مستخدم وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم بناؤه باستخدام React.js وTailwind CSS لترجمة تصميم Figma إلى موقع متجاوب ودقيق التفاصيل.","title":"رويال بلاتينوم: تصميم موقع لشركة خدمات مالية"},{"content":"OllieBites هو موقع ثابت متجاوب بالكامل تم تطويره كنموذج أولي حديث لعلامة وجبات سريعة. بصفتي المطور والمصمم الوحيد، تم بناء هذا المشروع بالكامل من الصفر، بدءاً من الفكرة والعلامة التجارية وصولاً إلى النشر النهائي.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: CSS وReactstrap الخرائط: Leaflet.js اللغة: JavaScript (ES6+) النشر: Netlify مع تكامل GitHub ✨ الميزات الرئيسية 🗺️ خرائط تفاعلية: تم دمج Leaflet.js لعرض مواقع المطاعم على خريطة ديناميكية وتفاعلية، مما يعزز تجربة المستخدم في البحث عن الفروع. 🎨 تصميم مخصص بالكامل: مسؤول عن تصميم واجهات وتجربة المستخدم بالكامل، والعلامة البصرية، وإنشاء المحتوى بما في ذلك الشعار والصور المخصصة. 📱 متجاوب بالكامل: تم بناؤه بنهج الجوال أولاً باستخدام Reactstrap لضمان تخطيط سلس وجذاب على جميع الأجهزة من الحواسيب إلى الهواتف الذكية. 🎬 سلايدر رئيسي جذاب: تتضمن الصفحة الرئيسية سلايدر ديناميكي لجذب انتباه المستخدم مباشرة بمحتوى ترويجي. 📈 تحسين محركات البحث: تم تطبيق أفضل ممارسات تحسين محركات البحث الأساسية لزيادة الظهور وسهولة البحث. 💡 هدف المشروع كان الهدف من هذا المشروع بناء نموذج أولي متكامل وجاهز للإنتاج لسلسلة مطاعم وجبات سريعة. يوضح هذا العمل تنفيذ المشروع من البداية للنهاية، بما في ذلك التصميم والتطوير والنشر. وقد كان بمثابة تمرين شامل لإنشاء تطبيق ويب يركز على المستخدم ويتميز بجاذبية بصرية من الصفر.\n🚀 عرض المشروع الموقع المباشر: oillebites.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-002/","section":"projects","summary":"نموذج أولي متجاوب بالكامل لعلامة وجبات سريعة، تم تصميمه وتطويره من الصفر. يتضمن خرائط تفاعلية باستخدام Leaflet.js وتصميم واجهات وتجربة مستخدم مخصص بالكامل.","title":"أولي-بايتس: نموذج أولي لموقع سلسلة وجبات سريعة"},{"content":"Brushstrokes هو نموذج أولي لمتجر إلكتروني متجاوب بالكامل صُمم لعلامة تجميل فاخرة. تم تطوير هذا الموقع الثابت من الصفر ليعرض واجهة متجر أنيقة ونظيفة، مع قوائم منتجات وصفحات تفاصيل شاملة لخلق تجربة تسوق متكاملة وسهلة الاستخدام.\n🛠️ التقنيات المستخدمة المكتبة الأساسية: React.js تصميم الواجهة: CSS3 مخصص إدارة البيانات: JSON الترميز: HTML5 اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🛍️ واجهة متجر إلكتروني: تتضمن جميع مكونات التجارة الإلكترونية الأساسية مثل شبكات عرض المنتجات وصفحات التفاصيل. 📄 محتوى مدعوم بـ JSON: يتم تحميل معلومات المنتجات (الأسماء، الأسعار، الوصف) ديناميكياً من ملف JSON محلي، مما يوضح إدارة البيانات الثابتة في تطبيق React. 📱 متجاوب بالكامل: تم تنسيقه بعناية لضمان تجربة سلسة على جميع الأجهزة من الشاشات الكبيرة إلى الهواتف المحمولة. 🎨 تصميم مخصص: تم تصميم وتطوير واجهة المستخدم وتجربة المستخدم بالكامل من الصفر، لخلق هوية علامة تجارية فريدة وجذابة للمتجر. 💨 تحريكات ديناميكية: تم تطبيق تحريكات وانتقالات ناعمة باستخدام CSS لتعزيز تفاعل المستخدم وإضفاء طابع عصري واحترافي. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو بناء نموذج أولي عملي وجذاب بصرياً لموقع تجارة إلكترونية لمنتجات العناية بالبشرة. يوضح هذا العمل القدرة على هيكلة وتطوير تطبيق React يدير بيانات المنتجات محلياً، مع التركيز على واجهة مستخدم عالية الجودة ومتجاوبة لتحسين تجربة التسوق للعملاء.\n🚀 عرض المشروع الموقع المباشر: brushstrokes.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-01/","section":"projects","summary":"نموذج أولي لمتجر إلكتروني متجاوب لعلامة تجميل، تم تطويره باستخدام React.js ويعرض منتجات وصفحات تفاصيل تعتمد على بيانات JSON.","title":"برش-ستروكس: نموذج أولي لمتجر منتجات العناية بالبشرة"},{"content":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل لا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\nما الذي يجعل Tailwind فريدة؟ في جوهرها، تعتمد Tailwind على منهجية الأدوات أولاً. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل bg-blue-500، px-4، وrounded-lg. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\nمنذ الإصدار 3، اعتمدت Tailwind الترجمة الفورية (JIT) بشكل افتراضي، حيث يتم توليد CSS الذي تستخدمه فقط. هذا يؤدي إلى بناءات فائقة السرعة وأحجام ملفات إنتاجية صغيرة جداً.\nما الجديد في Tailwind CSS 4.0+؟ تم إصدار Tailwind CSS 4.0 في يناير 2025، وقدمت إعادة كتابة ثورية مدعومة بمحرك Oxide المبني بلغة Rust. هذا أدى إلى أوقات بناء أسرع حتى 5 مرات وإعادة بناء فورية في أجزاء من الثانية.\n🔍 أبرز ميزات الإصدار 4.0: دعم CSS الحديث: ميزات مثل @layer، و@property، وcolor-mix()، واستعلامات الحاوية أصبحت مدمجة بالكامل وأساسية. إعداد يعتمد على CSS: يمكنك الآن تحديد الألوان والمسافات وغيرها من رموز التصميم باستخدام متغيرات CSS الأصلية—دون الحاجة لملفات إعداد JavaScript ثقيلة. إضافة Vite رسمية: إضافة مخصصة تضمن إعادة تحميل فورية وأداء عالي لمشاريع Vite. أدوات جديدة: دعم التحويلات ثلاثية الأبعاد، التدرجات المخروطية/الدائرية، متغيرات :not-، انتقالات @starting-style، وأحجام حقول النماذج الموسعة. تحديث v4.1 (أبريل 2025) توسّع التحديث 4.1 في التحكم الإبداعي بإضافة:\nظلال النصوص وظلال الألوان أدوات إخفاء CSS متغيرات overflow-wrap استعلامات وسائط pointer لتفاعل الأجهزة حلول بديلة عند تعطيل الجافاسكريبت لماذا يحبها المطورون في 2025 ❌ لا تضخم في CSS، ✅ بناءات سريعة: مع JIT والتنظيف المدمج، يبقى ملف CSS صغيراً وفعالاً. ⚙️ وضوح الإعداد مع متغيرات CSS: رموز التصميم متاحة كمتغيرات CSS أصلية، مما يسهل استخدامها وإعادة استخدامها وفحصها في المتصفح. 🌍 مصممة للأطر الحديثة: تندمج Tailwind بسلاسة مع أطر مثل Next.js وAstro وVue وSvelte دون فرض أنظمة مكونات معقدة. 💬 منظومة ومجتمع ضخم: من مكتبات رسمية مثل Tailwind UI وHeadless UI إلى إضافات الطرف الثالث وبيئة Tailwind Play، المنظومة تدعم المطورين على جميع المستويات. كيف تبدأ: الترقية أو مشروع جديد ✅ ترقية سريعة إلى v4.x إذا كنت تستخدم الإصدار 3.4+، استخدم دليل الترقية التلقائي الرسمي من Tailwind Labs. معظم سير العمل الحالية ستعمل مباشرة دون تعديل.\n🛠️ إعداد بسيط لمشاريع جديدة ثبّت Tailwind 4.0 أو أحدث عبر npm:\nnpm install tailwindcss ثم استوردها في ملف CSS الرئيسي:\n@import \u0026#34;tailwindcss\u0026#34;; لا حاجة لأي إعداد إضافي. ستحصل تلقائياً على اكتشاف المحتوى وجميع الميزات الحديثة بشكل افتراضي.\nأفضل الممارسات في 2025 الممارسة لماذا هي مهمة استخدم متغيرات CSS لتوحيد الثيمات عبر المكونات والتصاميم استغل استعلامات الحاوية لبناء تخطيطات متجاوبة بدون جافاسكريبت طبق متغيرات مركبة لتبسيط حالات hover/focus والتنسيق الديناميكي قلل من استخدام @apply للحفاظ على نظافة ملف الأنماط؛ استخدمه فقط للمكونات الأساسية حافظ على مسارات التنظيف لإزالة الأنماط غير المستخدمة بكفاءة خلاصة: هل تستحق Tailwind CSS التجربة؟ نعم—بكل تأكيد. Tailwind CSS في 2025 ليست مجرد أداة تنسيق أخرى، بل منظومة متكاملة تعزز الإنتاجية، وتفرض تصميماً متسقاً، وتتكيف مع معايير الويب الحديثة. الأمر ليس مجرد ضجة إعلامية—بل سرعة ومرونة ومتعة للمطور.\nسواء كنت تبني تطبيق React مع Vite، أو معرض أعمال في Astro، أو نظام تصميم من الصفر—Tailwind CSS تدعم كل ذلك.\n🚀 هل أنت مستعد للانطلاق؟ جرّب Tailwind Play لاختبار الأدوات مباشرة في المتصفح. استخدم التوثيقات الرسمية على tailwindcss.com لأدلة الترقية. جرّب ميزات الإصدار الرابع: استعلامات الحاوية، الأدوات الجديدة، ودعم الوضع الليلي. Tailwind CSS في 2025 ليست مجرد أداة مهمة—بل أصبحت أساسية.\nإذا كنت تعمل في تطوير الواجهات الأمامية، فهي أداة تستحق الإتقان.\n","permalink":"http://localhost:1313/ar/blog/posts/tailwind-css-in-2025-fast-flexible--future-ready/","section":"blog","summary":"\u003ch1 id=\"tailwind-css-في-2025-سريع-مرن-ومستعد-للمستقبل\"\u003eTailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل\u003c/h1\u003e\n\u003cp\u003eلا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\u003c/p\u003e\n\u003ch2 id=\"ما-الذي-يجعل-tailwind-فريدة\"\u003eما الذي يجعل Tailwind فريدة؟\u003c/h2\u003e\n\u003cp\u003eفي جوهرها، تعتمد Tailwind على منهجية \u003cstrong\u003eالأدوات أولاً\u003c/strong\u003e. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل \u003ccode\u003ebg-blue-500\u003c/code\u003e، \u003ccode\u003epx-4\u003c/code\u003e، و\u003ccode\u003erounded-lg\u003c/code\u003e. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\u003c/p\u003e","title":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل"},{"content":"Vite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها Vite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\n🚀 لماذا Vite سريعة جداً؟ تستفيد Vite من وحدات ES الأصلية (ESM)\rفي المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\nتستخدم esbuild\r، وهي أداة تجميع JavaScript فائقة السرعة مكتوبة بلغة Go، لمعالجة التبعيات، مما يجعلها أسرع من أدوات التجميع التقليدية مثل Webpack بما يصل إلى 10–100 مرة.\n🧠 الميزات الرئيسية تشغيل فوري للخادم: يبدأ الخادم تقريباً فوراً بغض النظر عن حجم تطبيقك. تحديث فوري للوحدات (HMR): تظهر التغييرات في المتصفح بمجرد الحفظ، دون إعادة تحميل كاملة. بناء إنتاجي محسن: يستخدم Rollup في الخلفية لإخراج إنتاجي عالي الأداء ودقيق. دعم جاهز للأطر: يعمل بسلاسة مع Vue وReact وPreact وSvelte وغيرها. إعداد بسيط ومرونة عالية: ملف الإعداد اختياري، وعند الحاجة يكون بسيطاً وبديهياً. 🛠️ كيف تبدأ مع Vite يمكنك إنشاء مشروع Vite في ثوانٍ:\nnpm create vite@latest my-app cd my-app npm install npm run dev ستحصل فوراً على خادم تطوير سريع جداً مع إعادة تحميل مباشرة.\n📦 Vite + React/Next/Vue؟ نعم — تعمل Vite بشكل رائع مع React وVue وحتى Svelte. في الواقع، يفضل العديد من المطورين Vite على Create React App أو Vue CLI بسبب سرعتها وبساطتها.\nإذا كنت تبني شيئاً باستخدام Next.js، فهي لا تزال خياراً ممتازاً للتطبيقات التي تعتمد على SSR. أما إذا كنت تطور تطبيقات صفحة واحدة (SPA) أو مواقع ثابتة، فقد توفر Vite تجربة أكثر سلاسة.\n🤔 هل يجب أن تستخدم Vite؟ إذا كنت تهتم بـ:\nدورات تطوير أسرع إعداد أبسط بناء إنتاجي عالي الأداء فالإجابة نعم، Vite مناسبة لك.\n🔚 الخلاصة Vite ليست مجرد خادم تطوير أسرع — بل هي منظومة متكاملة صُممت بعناية لتطوير الواجهات الأمامية الحديثة. ومع تطور عالم JavaScript، تبرز Vite كأداة تجمع بين السرعة والبساطة.\n💡 سواء كنت تبني معرض أعمال بسيط أو تطبيقاً إنتاجياً متقدماً، جرب Vite — قد تدمن سرعتها ولا ترضى بغيرها.\nمصادر الموقع الرسمي\rمستودع GitHub\r","permalink":"http://localhost:1313/ar/blog/posts/getting-started-with-vite-the-next-gen-frontend-build-tool/","section":"blog","summary":"\u003ch1 id=\"vite-أسرع-أداة-تطوير-للواجهات-الأمامية-ربما-لم-تكن-تعرف-أنك-بحاجة-إليها\"\u003eVite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها\u003c/h1\u003e\n\u003cp\u003eVite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"-لماذا-vite-سريعة-جدا\"\u003e🚀 لماذا Vite سريعة جداً؟\u003c/h2\u003e\n\u003cp\u003eتستفيد Vite من \r\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\r\n  وحدات ES الأصلية (ESM)\r\n\u003c/a\u003e\r\n في المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\u003c/p\u003e","title":"Vite: أسرع أداة تطوير للواجهات الأمامية قد لا تعلم أنك بحاجة إليها"},{"content":"سايبر مون هو نموذج أولي حديث لشركة تقنية خيالية متخصصة في تطوير تطبيقات الويب والموبايل، وخدمات السحابة، وتكامل الذكاء الاصطناعي. تم تصميم هذا المشروع وبرمجته كعمل ضمن معرض الأعمال، ليبرز مهاراتي في تطوير واجهات المستخدم المتجاوبة، والهندسة المعمارية القائمة على المكونات، وتصميم المواقع الموجه بالهوية البصرية.\n🛠️ التقنيات المستخدمة الإطار: Next.js (React) تصميم الواجهة: Tailwind CSS التحريكات: مكتبة AOS (Animate On Scroll) الثيمات: next-themes للوضع الليلي/النهاري النشر: Vercel ✨ الميزات الرئيسية 🌗 وضع ليلي/نهاري: تبديل سلس بين الوضعين مع حفظ التفضيل عبر الجلسات باستخدام next-themes. 🧱 تصميم معياري: مبني بمكونات React قابلة لإعادة الاستخدام لأقسام رئيسية مثل التنقل، والخدمات، وشهادات العملاء، ومعاينات المدونة. 🖼️ واجهة متحركة: تم تطبيق تأثيرات تلاشي وانزلاق أنيقة عند التمرير باستخدام مكتبة AOS لتعزيز تفاعل المستخدم. 📱 متجاوب بالكامل: تصميم يركز على الجوال أولاً مع قائمة جانبية تضمن تجربة سلسة على جميع الأجهزة. 🎨 هوية بصرية مخصصة: يستخدم التصميم خط Rajdhani ولوحة ألوان مستوحاة من الفضاء لإضفاء طابع تقني قوي وحديث. 🚀 أداء محسن: الموقع محسن لسرعة التحميل ومُستضاف على Vercel المعروفة بأدائها العالي مع تطبيقات Next.js. 💡 الهدف وفلسفة التصميم باعتباره مشروعاً لمعرض الأعمال، كان الهدف الأساسي من Cyber Moon هو إبراز القدرات التقنية والتصميمية في سياق واقعي. استُلهم التوجه البصري من الفضاء، باستخدام درجات الأزرق الداكن والرمادي الناعم ولمسات ذهبية، لخلق واجهة نظيفة وعصرية ومبهرة للعملاء أو أصحاب العمل المحتملين. يمثل هذا المشروع نموذجاً عالي الدقة لما يمكنني تقديمه.\n🚀 عرض المشروع الموقع المباشر: cyber-moon.vercel.app\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-012/","section":"projects","summary":"نموذج أولي متجاوب لشركة تقنية خيالية، يبرز بنية معمارية قائمة على المكونات باستخدام Next.js، وتصميم متجاوب مع Tailwind CSS، وتحريكات تمرير أنيقة.","title":"القمر الرقمي: نموذج أولي لشركة ناشئة في مجال التكنولوجيا الخيالية"},{"content":"تم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\nما هي React.js؟ React.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\nتركز React فقط على طبقة العرض (View) من معمارية MVC، مما يجعلها خفيفة وسهلة الدمج مع مكتبات أو أطر عمل أخرى.\nالميزات الرئيسية في React 1. بنية قائمة على المكونات تشجع React على تطوير مكونات قابلة لإعادة الاستخدام، مما يعزز صيانة الكود وقابليته للتوسع. كل مكون يدير حالته الخاصة ويعرض نفسه بناءً على تلك الحالة.\n2. JSX – جافاسكريبت XML يتيح JSX للمطورين كتابة هياكل HTML مباشرة داخل جافاسكريبت، مما يجعل الكود أسهل قراءة وصيانة.\nconst Hello = () =\u0026gt; \u0026lt;h1\u0026gt;Hello, World!\u0026lt;/h1\u0026gt;; 3. DOM افتراضي تستخدم React DOM افتراضي لتتبع التغييرات وتحديث الأجزاء المتغيرة فقط من الواجهة بكفاءة، مما يؤدي إلى عرض أسرع وأداء أفضل.\n4. ربط بيانات باتجاه واحد تطبق React ربط بيانات باتجاه واحد، أي أن البيانات تتدفق من المكون الأب إلى الأبناء، مما يجعل إدارة البيانات أكثر قابلية للتنبؤ وأسهل في التصحيح.\n5. منظومة غنية تتمتع React بمنظومة غنية تشمل أدوات مثل React Router للتنقل، وRedux لإدارة الحالة، وNext.js للعرض من جهة الخادم.\nلماذا تستخدم React؟ الكفاءة: الـ DOM الافتراضي يحسن أداء العرض. التركيبية: المكونات القابلة لإعادة الاستخدام تؤدي إلى كود أنظف وأسهل في الصيانة. مجتمع ضخم: لدى React مجتمع مطورين واسع وتوثيقات ممتازة. فرص عمل: React مطلوبة بشدة في سوق العمل، ما يجعلها مهارة ذات قيمة عالية. كيف تبدأ مع React يمكنك البدء مع React بتثبيتها عبر npm:\nnpx create-react-app my-app cd my-app npm start سيتم إعداد بيئة تطوير متكاملة مع إعادة تحميل فوري، وفحص الكود، ودعم ميزات جافاسكريبت الحديثة.\nالخلاصة تمكن React.js المطورين من بناء واجهات مستخدم سريعة وقابلة للتوسع وتفاعلية. شعبيتها وتنوع استخداماتها يجعلها تقنية أساسية في تطوير الويب الحديث. إذا كنت تطمح لأن تصبح مطور واجهات أمامية أو تعزز مهاراتك في جافاسكريبت، فإن تعلم React أمر لا غنى عنه.\n","permalink":"http://localhost:1313/ar/blog/posts/reactjs-blog-post/","section":"blog","summary":"\u003cp\u003eتم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\u003c/p\u003e\n\u003ch2 id=\"ما-هي-reactjs\"\u003eما هي React.js؟\u003c/h2\u003e\n\u003cp\u003eReact.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\u003c/p\u003e","title":"React.js: عملاق الواجهات الأمامية الذي تحتاجه في 2025"},{"content":"Why Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀 !http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\nIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where Next.js, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\nOne Framework, So Many Ways to Render This is the killer feature. With Next.js, you\u0026rsquo;re not locked into one way of doing things. You get to choose the best rendering strategy for each page.\nStatic Site Generation (SSG): Perfect for pages that don\u0026rsquo;t change often, like a blog post or a product landing page. The page is built once and served instantly from a CDN. The result? Blazing-fast load times. Server-Side Rendering (SSR): Need to show user-specific data? SSR generates the page on the server for every request, ensuring the content is always fresh. It\u0026rsquo;s ideal for dashboards and user profiles. Incremental Static Regeneration (ISR): This is the best of both worlds. You can have a static page that automatically rebuilds itself in the background after a set time. Your site stays fast, but the content is never stale. Client-Side Rendering (CSR): Still want the classic single-page app experience? You can do that too, all within the same application. This hybrid approach means you can optimize every single part of your app for maximum performance and efficiency.\nتجربة تطوير أفضل للمبرمجين !http://googleusercontent.com/image_collection/image_retrieval/7573518744484272445\nNext.js مليء بالميزات التي تجعل حياتك كمطور أكثر سهولة ومتعة.\nتوجيه قائم على الملفات: انسَ مكتبات التوجيه المعقدة. تريد صفحة جديدة على /about؟ فقط أنشئ ملفاً باسم about.js في مجلد الصفحات. بهذه البساطة والوضوح. تحديث فوري: عدّل الكود وسترى التغيير في المتصفح فوراً دون فقدان حالة المكون. هذا يجعل التطوير وتصحيح الأخطاء سريعاً للغاية. تحسينات مدمجة: يأتي Next.js مع تحسين تلقائي للصور، وتقسيم الكود، والمزيد مباشرة من البداية. يتولى المهام الثقيلة لتتمكن من التركيز على بناء الميزات. أداء يبهر المستخدمين وجوجل !http://googleusercontent.com/image_collection/image_retrieval/7999868972524234138\nفي النهاية، كل شيء يتعلق بالأداء. المواقع البطيئة تخسر المستخدمين وتحتل ترتيباً سيئاً في محركات البحث. تم بناء Next.js من الأساس ليكون سريعاً.\nمن خلال استراتيجيات العرض الذكية والتحسينات التلقائية، يساعدك Next.js على بناء مواقع تحقق نتائج عالية في مؤشرات Google Core Web Vitals. هذا يؤدي إلى ترتيب SEO أفضل، والأهم من ذلك، مستخدمون أكثر رضا لأنهم لا ينتظرون تحميل الصفحات.\n!http://googleusercontent.com/image_collection/image_retrieval/1237750557036671416\nالخلاصة Next.js ليس مجرد موضة؛ بل هو الخطوة المنطقية التالية لتطوير الويب الجاد. يجمع بين قوة React وهندسة معمارية مدروسة تركز على الأداء وتحل مشاكل المطورين الحقيقية. إذا كنت تريد بناء تطبيقات ويب سريعة وقابلة للتوسع وحديثة دون متاعب التطوير المعتادة، فـ Next.js هو أفضل مكان للانطلاق.\n","permalink":"http://localhost:1313/ar/blog/posts/next.js-is-your-new-secret-weapon-for-building-awesome-web-apps/","section":"blog","summary":"\u003ch1 id=\"why-nextjs-is-your-new-secret-weapon-for-building-awesome-web-apps-\"\u003eWhy Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀\u003c/h1\u003e\n\u003cp\u003e!http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where \u003cstrong\u003eNext.js\u003c/strong\u003e, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\u003c/p\u003e","title":"Next.js: سلاحك السري الجديد لبناء تطبيقات ويب مذهلة"},{"content":"موقعي الشخصي\n","permalink":"http://localhost:1313/ar/blog/posts/my-best-website/","section":"blog","summary":"\u003cp\u003eموقعي الشخصي\u003c/p\u003e","title":"أفضل موقع لي"},{"content":"قمت بتطوير موقع إلكتروني حديث ومتجاوب لشركة أبراج بلاتينيوم ذ.م.م.، الرائدة في تقديم حلول الألياف الضوئية والشبكات في سوريا. كان هدف المشروع إنشاء حضور رقمي احترافي يعرض خدماتهم التقنية المتقدمة ويعزز مكانتهم كلاعب رئيسي في قطاع البنية التحتية للاتصالات.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js أداة البناء: Vite التوجيه: React Router التحريكات: React Spring \u0026amp; React Typing Effect تصميم الواجهة: CSS3 النقي مع استعلامات الوسائط خدمة الخلفية: Web3Forms API (لنموذج التواصل) ✨ الميزات الرئيسية 📱 تصميم متجاوب بالكامل: يتكيف التصميم مع جميع أحجام الشاشات، مع قائمة تنقل جانبية أنيقة وقابلة للتبديل لتجربة مثالية على الجوال. 🎨 شريط تنقل ديناميكي: شريط تنقل ثابت يتحول من شفاف إلى خلفية صلبة عند التمرير، لضمان سهولة التنقل. 💼 نموذج تواصل فعال: نموذج تواصل يعمل بكفاءة يلتقط بيانات المستخدم ويرسلها مباشرة إلى بريد الإدارة باستخدام Web3Forms API. 🎬 مشغل فيديو مدمج: مشغل فيديو يظهر كنافذة منبثقة من قسم \u0026ldquo;من نحن\u0026rdquo;، لعرض محتوى مرئي تفاعلي دون مغادرة الصفحة. 💨 تمرير سلس: تم استخدام مكتبة react-scroll لتفعيل التمرير السلس عند النقر على روابط التنقل. 🖼️ أقسام تفاعلية: يحتوي الموقع على عدة أقسام تفاعلية، منها معرض صور أنيق بأربع أعمدة، وسلايدر شهادات العملاء، وبطاقات برامج تفاعلية عند المرور عليها. 💡 هدف المشروع كان الهدف الأساسي هو إنشاء واجهة رقمية احترافية توضح بوضوح خدمات أبراج بلاتينيوم المتخصصة في قطاع الألياف الضوئية. تم تصميم الموقع لتعزيز علامتهم التجارية كقائد تقني حديث وموثوق، وتوفير نقطة تواصل واضحة للعملاء المحتملين الباحثين عن حلول شبكات.\n🚀 عرض المشروع الموقع المباشر: abrajplatinum.com\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-01/","section":"projects","summary":"تم تطوير موقع إلكتروني عصري واحترافي لشركة متخصصة في حلول الألياف الضوئية والشبكات، بهدف إبراز خبراتهم التقنية وتعزيز حضورهم الرقمي.","title":"أبراج بلاتينوم: موقع لحلول الألياف الضوئية"},{"content":"رويال بلاتينيوم هو موقع واجهات وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم تطويره كتطبيق صفحة واحدة متجاوب بالكامل. ركز هذا المشروع النموذجي على ترجمة تصميم Figma الاحترافي إلى موقع عالي الأداء، مع إبراز بنية مكونات نظيفة وتنسيق دقيق باستخدام Tailwind CSS.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: Tailwind CSS أداة البناء: Vite اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🎨 تصميم دقيق مطابق للأصل: تم تنفيذ التصميم بعناية ليطابق تصميم Figma الأصلي، مع صور عالية الجودة وتدرجات أنيقة وواجهة داكنة نظيفة تعكس الاحترافية والثقة. 🧱 مكونات قابلة لإعادة الاستخدام: تم بناء الموقع على أساس مكونات قابلة لإعادة الاستخدام لإحصائيات الأعمال، والميزات، وشهادات العملاء وغيرها، لضمان كود نظيف وسهل الصيانة. 📱 متجاوب بالكامل: تم تحسينه لجميع الأجهزة مع نهج التصميم للجوال أولاً. تتقلص قائمة التنقل بسلاسة إلى قائمة قابلة للتبديل على الشاشات الصغيرة لتجربة استخدام بديهية. 🚀 سير عمل فعال: تم تطويره باستخدام أداة البناء Vite السريعة جداً لتقليل الاعتماديات وتسريع دورة التطوير. 📈 بيانات مركزية: تتم إدارة جميع المحتويات الثابتة مثل روابط التنقل ووصف الميزات في ملف ثابت مركزي، مما يجعل تحديث الموقع وصيانته سهلاً. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو إثبات القدرة على تحويل تصميم عالي الدقة من Figma إلى تطبيق ويب متكامل الوظائف، متجاوب وجذاب بصرياً. يمثل هذا العمل إضافة قوية لمحفظة الأعمال، ويبرز أحدث ممارسات تطوير الواجهات الأمامية، والاهتمام الدقيق بتفاصيل تجربة المستخدم، وإتقان React.js وTailwind CSS.\n🚀 عرض المشروع الموقع المباشر: royalplatinum.surge.sh\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-02/","section":"projects","summary":"موقع واجهات مستخدم وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم بناؤه باستخدام React.js وTailwind CSS لترجمة تصميم Figma إلى موقع متجاوب ودقيق التفاصيل.","title":"رويال بلاتينوم: تصميم موقع لشركة خدمات مالية"},{"content":"OllieBites هو موقع ثابت متجاوب بالكامل تم تطويره كنموذج أولي حديث لعلامة وجبات سريعة. بصفتي المطور والمصمم الوحيد، تم بناء هذا المشروع بالكامل من الصفر، بدءاً من الفكرة والعلامة التجارية وصولاً إلى النشر النهائي.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: CSS وReactstrap الخرائط: Leaflet.js اللغة: JavaScript (ES6+) النشر: Netlify مع تكامل GitHub ✨ الميزات الرئيسية 🗺️ خرائط تفاعلية: تم دمج Leaflet.js لعرض مواقع المطاعم على خريطة ديناميكية وتفاعلية، مما يعزز تجربة المستخدم في البحث عن الفروع. 🎨 تصميم مخصص بالكامل: مسؤول عن تصميم واجهات وتجربة المستخدم بالكامل، والعلامة البصرية، وإنشاء المحتوى بما في ذلك الشعار والصور المخصصة. 📱 متجاوب بالكامل: تم بناؤه بنهج الجوال أولاً باستخدام Reactstrap لضمان تخطيط سلس وجذاب على جميع الأجهزة من الحواسيب إلى الهواتف الذكية. 🎬 سلايدر رئيسي جذاب: تتضمن الصفحة الرئيسية سلايدر ديناميكي لجذب انتباه المستخدم مباشرة بمحتوى ترويجي. 📈 تحسين محركات البحث: تم تطبيق أفضل ممارسات تحسين محركات البحث الأساسية لزيادة الظهور وسهولة البحث. 💡 هدف المشروع كان الهدف من هذا المشروع بناء نموذج أولي متكامل وجاهز للإنتاج لسلسلة مطاعم وجبات سريعة. يوضح هذا العمل تنفيذ المشروع من البداية للنهاية، بما في ذلك التصميم والتطوير والنشر. وقد كان بمثابة تمرين شامل لإنشاء تطبيق ويب يركز على المستخدم ويتميز بجاذبية بصرية من الصفر.\n🚀 عرض المشروع الموقع المباشر: oillebites.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-002/","section":"projects","summary":"نموذج أولي متجاوب بالكامل لعلامة وجبات سريعة، تم تصميمه وتطويره من الصفر. يتضمن خرائط تفاعلية باستخدام Leaflet.js وتصميم واجهات وتجربة مستخدم مخصص بالكامل.","title":"أولي-بايتس: نموذج أولي لموقع سلسلة وجبات سريعة"},{"content":"Brushstrokes هو نموذج أولي لمتجر إلكتروني متجاوب بالكامل صُمم لعلامة تجميل فاخرة. تم تطوير هذا الموقع الثابت من الصفر ليعرض واجهة متجر أنيقة ونظيفة، مع قوائم منتجات وصفحات تفاصيل شاملة لخلق تجربة تسوق متكاملة وسهلة الاستخدام.\n🛠️ التقنيات المستخدمة المكتبة الأساسية: React.js تصميم الواجهة: CSS3 مخصص إدارة البيانات: JSON الترميز: HTML5 اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🛍️ واجهة متجر إلكتروني: تتضمن جميع مكونات التجارة الإلكترونية الأساسية مثل شبكات عرض المنتجات وصفحات التفاصيل. 📄 محتوى مدعوم بـ JSON: يتم تحميل معلومات المنتجات (الأسماء، الأسعار، الوصف) ديناميكياً من ملف JSON محلي، مما يوضح إدارة البيانات الثابتة في تطبيق React. 📱 متجاوب بالكامل: تم تنسيقه بعناية لضمان تجربة سلسة على جميع الأجهزة من الشاشات الكبيرة إلى الهواتف المحمولة. 🎨 تصميم مخصص: تم تصميم وتطوير واجهة المستخدم وتجربة المستخدم بالكامل من الصفر، لخلق هوية علامة تجارية فريدة وجذابة للمتجر. 💨 تحريكات ديناميكية: تم تطبيق تحريكات وانتقالات ناعمة باستخدام CSS لتعزيز تفاعل المستخدم وإضفاء طابع عصري واحترافي. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو بناء نموذج أولي عملي وجذاب بصرياً لموقع تجارة إلكترونية لمنتجات العناية بالبشرة. يوضح هذا العمل القدرة على هيكلة وتطوير تطبيق React يدير بيانات المنتجات محلياً، مع التركيز على واجهة مستخدم عالية الجودة ومتجاوبة لتحسين تجربة التسوق للعملاء.\n🚀 عرض المشروع الموقع المباشر: brushstrokes.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-01/","section":"projects","summary":"نموذج أولي لمتجر إلكتروني متجاوب لعلامة تجميل، تم تطويره باستخدام React.js ويعرض منتجات وصفحات تفاصيل تعتمد على بيانات JSON.","title":"برش-ستروكس: نموذج أولي لمتجر منتجات العناية بالبشرة"},{"content":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل لا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\nما الذي يجعل Tailwind فريدة؟ في جوهرها، تعتمد Tailwind على منهجية الأدوات أولاً. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل bg-blue-500، px-4، وrounded-lg. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\nمنذ الإصدار 3، اعتمدت Tailwind الترجمة الفورية (JIT) بشكل افتراضي، حيث يتم توليد CSS الذي تستخدمه فقط. هذا يؤدي إلى بناءات فائقة السرعة وأحجام ملفات إنتاجية صغيرة جداً.\nما الجديد في Tailwind CSS 4.0+؟ تم إصدار Tailwind CSS 4.0 في يناير 2025، وقدمت إعادة كتابة ثورية مدعومة بمحرك Oxide المبني بلغة Rust. هذا أدى إلى أوقات بناء أسرع حتى 5 مرات وإعادة بناء فورية في أجزاء من الثانية.\n🔍 أبرز ميزات الإصدار 4.0: دعم CSS الحديث: ميزات مثل @layer، و@property، وcolor-mix()، واستعلامات الحاوية أصبحت مدمجة بالكامل وأساسية. إعداد يعتمد على CSS: يمكنك الآن تحديد الألوان والمسافات وغيرها من رموز التصميم باستخدام متغيرات CSS الأصلية—دون الحاجة لملفات إعداد JavaScript ثقيلة. إضافة Vite رسمية: إضافة مخصصة تضمن إعادة تحميل فورية وأداء عالي لمشاريع Vite. أدوات جديدة: دعم التحويلات ثلاثية الأبعاد، التدرجات المخروطية/الدائرية، متغيرات :not-، انتقالات @starting-style، وأحجام حقول النماذج الموسعة. تحديث v4.1 (أبريل 2025) توسّع التحديث 4.1 في التحكم الإبداعي بإضافة:\nظلال النصوص وظلال الألوان أدوات إخفاء CSS متغيرات overflow-wrap استعلامات وسائط pointer لتفاعل الأجهزة حلول بديلة عند تعطيل الجافاسكريبت لماذا يحبها المطورون في 2025 ❌ لا تضخم في CSS، ✅ بناءات سريعة: مع JIT والتنظيف المدمج، يبقى ملف CSS صغيراً وفعالاً. ⚙️ وضوح الإعداد مع متغيرات CSS: رموز التصميم متاحة كمتغيرات CSS أصلية، مما يسهل استخدامها وإعادة استخدامها وفحصها في المتصفح. 🌍 مصممة للأطر الحديثة: تندمج Tailwind بسلاسة مع أطر مثل Next.js وAstro وVue وSvelte دون فرض أنظمة مكونات معقدة. 💬 منظومة ومجتمع ضخم: من مكتبات رسمية مثل Tailwind UI وHeadless UI إلى إضافات الطرف الثالث وبيئة Tailwind Play، المنظومة تدعم المطورين على جميع المستويات. كيف تبدأ: الترقية أو مشروع جديد ✅ ترقية سريعة إلى v4.x إذا كنت تستخدم الإصدار 3.4+، استخدم دليل الترقية التلقائي الرسمي من Tailwind Labs. معظم سير العمل الحالية ستعمل مباشرة دون تعديل.\n🛠️ إعداد بسيط لمشاريع جديدة ثبّت Tailwind 4.0 أو أحدث عبر npm:\nnpm install tailwindcss ثم استوردها في ملف CSS الرئيسي:\n@import \u0026#34;tailwindcss\u0026#34;; لا حاجة لأي إعداد إضافي. ستحصل تلقائياً على اكتشاف المحتوى وجميع الميزات الحديثة بشكل افتراضي.\nأفضل الممارسات في 2025 الممارسة لماذا هي مهمة استخدم متغيرات CSS لتوحيد الثيمات عبر المكونات والتصاميم استغل استعلامات الحاوية لبناء تخطيطات متجاوبة بدون جافاسكريبت طبق متغيرات مركبة لتبسيط حالات hover/focus والتنسيق الديناميكي قلل من استخدام @apply للحفاظ على نظافة ملف الأنماط؛ استخدمه فقط للمكونات الأساسية حافظ على مسارات التنظيف لإزالة الأنماط غير المستخدمة بكفاءة خلاصة: هل تستحق Tailwind CSS التجربة؟ نعم—بكل تأكيد. Tailwind CSS في 2025 ليست مجرد أداة تنسيق أخرى، بل منظومة متكاملة تعزز الإنتاجية، وتفرض تصميماً متسقاً، وتتكيف مع معايير الويب الحديثة. الأمر ليس مجرد ضجة إعلامية—بل سرعة ومرونة ومتعة للمطور.\nسواء كنت تبني تطبيق React مع Vite، أو معرض أعمال في Astro، أو نظام تصميم من الصفر—Tailwind CSS تدعم كل ذلك.\n🚀 هل أنت مستعد للانطلاق؟ جرّب Tailwind Play لاختبار الأدوات مباشرة في المتصفح. استخدم التوثيقات الرسمية على tailwindcss.com لأدلة الترقية. جرّب ميزات الإصدار الرابع: استعلامات الحاوية، الأدوات الجديدة، ودعم الوضع الليلي. Tailwind CSS في 2025 ليست مجرد أداة مهمة—بل أصبحت أساسية.\nإذا كنت تعمل في تطوير الواجهات الأمامية، فهي أداة تستحق الإتقان.\n","permalink":"http://localhost:1313/ar/blog/posts/tailwind-css-in-2025-fast-flexible--future-ready/","section":"blog","summary":"\u003ch1 id=\"tailwind-css-في-2025-سريع-مرن-ومستعد-للمستقبل\"\u003eTailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل\u003c/h1\u003e\n\u003cp\u003eلا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\u003c/p\u003e\n\u003ch2 id=\"ما-الذي-يجعل-tailwind-فريدة\"\u003eما الذي يجعل Tailwind فريدة؟\u003c/h2\u003e\n\u003cp\u003eفي جوهرها، تعتمد Tailwind على منهجية \u003cstrong\u003eالأدوات أولاً\u003c/strong\u003e. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل \u003ccode\u003ebg-blue-500\u003c/code\u003e، \u003ccode\u003epx-4\u003c/code\u003e، و\u003ccode\u003erounded-lg\u003c/code\u003e. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\u003c/p\u003e","title":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل"},{"content":"Vite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها Vite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\n🚀 لماذا Vite سريعة جداً؟ تستفيد Vite من وحدات ES الأصلية (ESM)\rفي المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\nتستخدم esbuild\r، وهي أداة تجميع JavaScript فائقة السرعة مكتوبة بلغة Go، لمعالجة التبعيات، مما يجعلها أسرع من أدوات التجميع التقليدية مثل Webpack بما يصل إلى 10–100 مرة.\n🧠 الميزات الرئيسية تشغيل فوري للخادم: يبدأ الخادم تقريباً فوراً بغض النظر عن حجم تطبيقك. تحديث فوري للوحدات (HMR): تظهر التغييرات في المتصفح بمجرد الحفظ، دون إعادة تحميل كاملة. بناء إنتاجي محسن: يستخدم Rollup في الخلفية لإخراج إنتاجي عالي الأداء ودقيق. دعم جاهز للأطر: يعمل بسلاسة مع Vue وReact وPreact وSvelte وغيرها. إعداد بسيط ومرونة عالية: ملف الإعداد اختياري، وعند الحاجة يكون بسيطاً وبديهياً. 🛠️ كيف تبدأ مع Vite يمكنك إنشاء مشروع Vite في ثوانٍ:\nnpm create vite@latest my-app cd my-app npm install npm run dev ستحصل فوراً على خادم تطوير سريع جداً مع إعادة تحميل مباشرة.\n📦 Vite + React/Next/Vue؟ نعم — تعمل Vite بشكل رائع مع React وVue وحتى Svelte. في الواقع، يفضل العديد من المطورين Vite على Create React App أو Vue CLI بسبب سرعتها وبساطتها.\nإذا كنت تبني شيئاً باستخدام Next.js، فهي لا تزال خياراً ممتازاً للتطبيقات التي تعتمد على SSR. أما إذا كنت تطور تطبيقات صفحة واحدة (SPA) أو مواقع ثابتة، فقد توفر Vite تجربة أكثر سلاسة.\n🤔 هل يجب أن تستخدم Vite؟ إذا كنت تهتم بـ:\nدورات تطوير أسرع إعداد أبسط بناء إنتاجي عالي الأداء فالإجابة نعم، Vite مناسبة لك.\n🔚 الخلاصة Vite ليست مجرد خادم تطوير أسرع — بل هي منظومة متكاملة صُممت بعناية لتطوير الواجهات الأمامية الحديثة. ومع تطور عالم JavaScript، تبرز Vite كأداة تجمع بين السرعة والبساطة.\n💡 سواء كنت تبني معرض أعمال بسيط أو تطبيقاً إنتاجياً متقدماً، جرب Vite — قد تدمن سرعتها ولا ترضى بغيرها.\nمصادر الموقع الرسمي\rمستودع GitHub\r","permalink":"http://localhost:1313/ar/blog/posts/getting-started-with-vite-the-next-gen-frontend-build-tool/","section":"blog","summary":"\u003ch1 id=\"vite-أسرع-أداة-تطوير-للواجهات-الأمامية-ربما-لم-تكن-تعرف-أنك-بحاجة-إليها\"\u003eVite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها\u003c/h1\u003e\n\u003cp\u003eVite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"-لماذا-vite-سريعة-جدا\"\u003e🚀 لماذا Vite سريعة جداً؟\u003c/h2\u003e\n\u003cp\u003eتستفيد Vite من \r\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\r\n  وحدات ES الأصلية (ESM)\r\n\u003c/a\u003e\r\n في المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\u003c/p\u003e","title":"Vite: أسرع أداة تطوير للواجهات الأمامية قد لا تعلم أنك بحاجة إليها"},{"content":"سايبر مون هو نموذج أولي حديث لشركة تقنية خيالية متخصصة في تطوير تطبيقات الويب والموبايل، وخدمات السحابة، وتكامل الذكاء الاصطناعي. تم تصميم هذا المشروع وبرمجته كعمل ضمن معرض الأعمال، ليبرز مهاراتي في تطوير واجهات المستخدم المتجاوبة، والهندسة المعمارية القائمة على المكونات، وتصميم المواقع الموجه بالهوية البصرية.\n🛠️ التقنيات المستخدمة الإطار: Next.js (React) تصميم الواجهة: Tailwind CSS التحريكات: مكتبة AOS (Animate On Scroll) الثيمات: next-themes للوضع الليلي/النهاري النشر: Vercel ✨ الميزات الرئيسية 🌗 وضع ليلي/نهاري: تبديل سلس بين الوضعين مع حفظ التفضيل عبر الجلسات باستخدام next-themes. 🧱 تصميم معياري: مبني بمكونات React قابلة لإعادة الاستخدام لأقسام رئيسية مثل التنقل، والخدمات، وشهادات العملاء، ومعاينات المدونة. 🖼️ واجهة متحركة: تم تطبيق تأثيرات تلاشي وانزلاق أنيقة عند التمرير باستخدام مكتبة AOS لتعزيز تفاعل المستخدم. 📱 متجاوب بالكامل: تصميم يركز على الجوال أولاً مع قائمة جانبية تضمن تجربة سلسة على جميع الأجهزة. 🎨 هوية بصرية مخصصة: يستخدم التصميم خط Rajdhani ولوحة ألوان مستوحاة من الفضاء لإضفاء طابع تقني قوي وحديث. 🚀 أداء محسن: الموقع محسن لسرعة التحميل ومُستضاف على Vercel المعروفة بأدائها العالي مع تطبيقات Next.js. 💡 الهدف وفلسفة التصميم باعتباره مشروعاً لمعرض الأعمال، كان الهدف الأساسي من Cyber Moon هو إبراز القدرات التقنية والتصميمية في سياق واقعي. استُلهم التوجه البصري من الفضاء، باستخدام درجات الأزرق الداكن والرمادي الناعم ولمسات ذهبية، لخلق واجهة نظيفة وعصرية ومبهرة للعملاء أو أصحاب العمل المحتملين. يمثل هذا المشروع نموذجاً عالي الدقة لما يمكنني تقديمه.\n🚀 عرض المشروع الموقع المباشر: cyber-moon.vercel.app\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-012/","section":"projects","summary":"نموذج أولي متجاوب لشركة تقنية خيالية، يبرز بنية معمارية قائمة على المكونات باستخدام Next.js، وتصميم متجاوب مع Tailwind CSS، وتحريكات تمرير أنيقة.","title":"القمر الرقمي: نموذج أولي لشركة ناشئة في مجال التكنولوجيا الخيالية"},{"content":"تم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\nما هي React.js؟ React.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\nتركز React فقط على طبقة العرض (View) من معمارية MVC، مما يجعلها خفيفة وسهلة الدمج مع مكتبات أو أطر عمل أخرى.\nالميزات الرئيسية في React 1. بنية قائمة على المكونات تشجع React على تطوير مكونات قابلة لإعادة الاستخدام، مما يعزز صيانة الكود وقابليته للتوسع. كل مكون يدير حالته الخاصة ويعرض نفسه بناءً على تلك الحالة.\n2. JSX – جافاسكريبت XML يتيح JSX للمطورين كتابة هياكل HTML مباشرة داخل جافاسكريبت، مما يجعل الكود أسهل قراءة وصيانة.\nconst Hello = () =\u0026gt; \u0026lt;h1\u0026gt;Hello, World!\u0026lt;/h1\u0026gt;; 3. DOM افتراضي تستخدم React DOM افتراضي لتتبع التغييرات وتحديث الأجزاء المتغيرة فقط من الواجهة بكفاءة، مما يؤدي إلى عرض أسرع وأداء أفضل.\n4. ربط بيانات باتجاه واحد تطبق React ربط بيانات باتجاه واحد، أي أن البيانات تتدفق من المكون الأب إلى الأبناء، مما يجعل إدارة البيانات أكثر قابلية للتنبؤ وأسهل في التصحيح.\n5. منظومة غنية تتمتع React بمنظومة غنية تشمل أدوات مثل React Router للتنقل، وRedux لإدارة الحالة، وNext.js للعرض من جهة الخادم.\nلماذا تستخدم React؟ الكفاءة: الـ DOM الافتراضي يحسن أداء العرض. التركيبية: المكونات القابلة لإعادة الاستخدام تؤدي إلى كود أنظف وأسهل في الصيانة. مجتمع ضخم: لدى React مجتمع مطورين واسع وتوثيقات ممتازة. فرص عمل: React مطلوبة بشدة في سوق العمل، ما يجعلها مهارة ذات قيمة عالية. كيف تبدأ مع React يمكنك البدء مع React بتثبيتها عبر npm:\nnpx create-react-app my-app cd my-app npm start سيتم إعداد بيئة تطوير متكاملة مع إعادة تحميل فوري، وفحص الكود، ودعم ميزات جافاسكريبت الحديثة.\nالخلاصة تمكن React.js المطورين من بناء واجهات مستخدم سريعة وقابلة للتوسع وتفاعلية. شعبيتها وتنوع استخداماتها يجعلها تقنية أساسية في تطوير الويب الحديث. إذا كنت تطمح لأن تصبح مطور واجهات أمامية أو تعزز مهاراتك في جافاسكريبت، فإن تعلم React أمر لا غنى عنه.\n","permalink":"http://localhost:1313/ar/blog/posts/reactjs-blog-post/","section":"blog","summary":"\u003cp\u003eتم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\u003c/p\u003e\n\u003ch2 id=\"ما-هي-reactjs\"\u003eما هي React.js؟\u003c/h2\u003e\n\u003cp\u003eReact.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\u003c/p\u003e","title":"React.js: عملاق الواجهات الأمامية الذي تحتاجه في 2025"},{"content":"Why Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀 !http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\nIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where Next.js, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\nOne Framework, So Many Ways to Render This is the killer feature. With Next.js, you\u0026rsquo;re not locked into one way of doing things. You get to choose the best rendering strategy for each page.\nStatic Site Generation (SSG): Perfect for pages that don\u0026rsquo;t change often, like a blog post or a product landing page. The page is built once and served instantly from a CDN. The result? Blazing-fast load times. Server-Side Rendering (SSR): Need to show user-specific data? SSR generates the page on the server for every request, ensuring the content is always fresh. It\u0026rsquo;s ideal for dashboards and user profiles. Incremental Static Regeneration (ISR): This is the best of both worlds. You can have a static page that automatically rebuilds itself in the background after a set time. Your site stays fast, but the content is never stale. Client-Side Rendering (CSR): Still want the classic single-page app experience? You can do that too, all within the same application. This hybrid approach means you can optimize every single part of your app for maximum performance and efficiency.\nتجربة تطوير أفضل للمبرمجين !http://googleusercontent.com/image_collection/image_retrieval/7573518744484272445\nNext.js مليء بالميزات التي تجعل حياتك كمطور أكثر سهولة ومتعة.\nتوجيه قائم على الملفات: انسَ مكتبات التوجيه المعقدة. تريد صفحة جديدة على /about؟ فقط أنشئ ملفاً باسم about.js في مجلد الصفحات. بهذه البساطة والوضوح. تحديث فوري: عدّل الكود وسترى التغيير في المتصفح فوراً دون فقدان حالة المكون. هذا يجعل التطوير وتصحيح الأخطاء سريعاً للغاية. تحسينات مدمجة: يأتي Next.js مع تحسين تلقائي للصور، وتقسيم الكود، والمزيد مباشرة من البداية. يتولى المهام الثقيلة لتتمكن من التركيز على بناء الميزات. أداء يبهر المستخدمين وجوجل !http://googleusercontent.com/image_collection/image_retrieval/7999868972524234138\nفي النهاية، كل شيء يتعلق بالأداء. المواقع البطيئة تخسر المستخدمين وتحتل ترتيباً سيئاً في محركات البحث. تم بناء Next.js من الأساس ليكون سريعاً.\nمن خلال استراتيجيات العرض الذكية والتحسينات التلقائية، يساعدك Next.js على بناء مواقع تحقق نتائج عالية في مؤشرات Google Core Web Vitals. هذا يؤدي إلى ترتيب SEO أفضل، والأهم من ذلك، مستخدمون أكثر رضا لأنهم لا ينتظرون تحميل الصفحات.\n!http://googleusercontent.com/image_collection/image_retrieval/1237750557036671416\nالخلاصة Next.js ليس مجرد موضة؛ بل هو الخطوة المنطقية التالية لتطوير الويب الجاد. يجمع بين قوة React وهندسة معمارية مدروسة تركز على الأداء وتحل مشاكل المطورين الحقيقية. إذا كنت تريد بناء تطبيقات ويب سريعة وقابلة للتوسع وحديثة دون متاعب التطوير المعتادة، فـ Next.js هو أفضل مكان للانطلاق.\n","permalink":"http://localhost:1313/ar/blog/posts/next.js-is-your-new-secret-weapon-for-building-awesome-web-apps/","section":"blog","summary":"\u003ch1 id=\"why-nextjs-is-your-new-secret-weapon-for-building-awesome-web-apps-\"\u003eWhy Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀\u003c/h1\u003e\n\u003cp\u003e!http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where \u003cstrong\u003eNext.js\u003c/strong\u003e, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\u003c/p\u003e","title":"Next.js: سلاحك السري الجديد لبناء تطبيقات ويب مذهلة"},{"content":"موقعي الشخصي\n","permalink":"http://localhost:1313/ar/blog/posts/my-best-website/","section":"blog","summary":"\u003cp\u003eموقعي الشخصي\u003c/p\u003e","title":"أفضل موقع لي"},{"content":"قمت بتطوير موقع إلكتروني حديث ومتجاوب لشركة أبراج بلاتينيوم ذ.م.م.، الرائدة في تقديم حلول الألياف الضوئية والشبكات في سوريا. كان هدف المشروع إنشاء حضور رقمي احترافي يعرض خدماتهم التقنية المتقدمة ويعزز مكانتهم كلاعب رئيسي في قطاع البنية التحتية للاتصالات.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js أداة البناء: Vite التوجيه: React Router التحريكات: React Spring \u0026amp; React Typing Effect تصميم الواجهة: CSS3 النقي مع استعلامات الوسائط خدمة الخلفية: Web3Forms API (لنموذج التواصل) ✨ الميزات الرئيسية 📱 تصميم متجاوب بالكامل: يتكيف التصميم مع جميع أحجام الشاشات، مع قائمة تنقل جانبية أنيقة وقابلة للتبديل لتجربة مثالية على الجوال. 🎨 شريط تنقل ديناميكي: شريط تنقل ثابت يتحول من شفاف إلى خلفية صلبة عند التمرير، لضمان سهولة التنقل. 💼 نموذج تواصل فعال: نموذج تواصل يعمل بكفاءة يلتقط بيانات المستخدم ويرسلها مباشرة إلى بريد الإدارة باستخدام Web3Forms API. 🎬 مشغل فيديو مدمج: مشغل فيديو يظهر كنافذة منبثقة من قسم \u0026ldquo;من نحن\u0026rdquo;، لعرض محتوى مرئي تفاعلي دون مغادرة الصفحة. 💨 تمرير سلس: تم استخدام مكتبة react-scroll لتفعيل التمرير السلس عند النقر على روابط التنقل. 🖼️ أقسام تفاعلية: يحتوي الموقع على عدة أقسام تفاعلية، منها معرض صور أنيق بأربع أعمدة، وسلايدر شهادات العملاء، وبطاقات برامج تفاعلية عند المرور عليها. 💡 هدف المشروع كان الهدف الأساسي هو إنشاء واجهة رقمية احترافية توضح بوضوح خدمات أبراج بلاتينيوم المتخصصة في قطاع الألياف الضوئية. تم تصميم الموقع لتعزيز علامتهم التجارية كقائد تقني حديث وموثوق، وتوفير نقطة تواصل واضحة للعملاء المحتملين الباحثين عن حلول شبكات.\n🚀 عرض المشروع الموقع المباشر: abrajplatinum.com\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-01/","section":"projects","summary":"تم تطوير موقع إلكتروني عصري واحترافي لشركة متخصصة في حلول الألياف الضوئية والشبكات، بهدف إبراز خبراتهم التقنية وتعزيز حضورهم الرقمي.","title":"أبراج بلاتينوم: موقع لحلول الألياف الضوئية"},{"content":"رويال بلاتينيوم هو موقع واجهات وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم تطويره كتطبيق صفحة واحدة متجاوب بالكامل. ركز هذا المشروع النموذجي على ترجمة تصميم Figma الاحترافي إلى موقع عالي الأداء، مع إبراز بنية مكونات نظيفة وتنسيق دقيق باستخدام Tailwind CSS.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: Tailwind CSS أداة البناء: Vite اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🎨 تصميم دقيق مطابق للأصل: تم تنفيذ التصميم بعناية ليطابق تصميم Figma الأصلي، مع صور عالية الجودة وتدرجات أنيقة وواجهة داكنة نظيفة تعكس الاحترافية والثقة. 🧱 مكونات قابلة لإعادة الاستخدام: تم بناء الموقع على أساس مكونات قابلة لإعادة الاستخدام لإحصائيات الأعمال، والميزات، وشهادات العملاء وغيرها، لضمان كود نظيف وسهل الصيانة. 📱 متجاوب بالكامل: تم تحسينه لجميع الأجهزة مع نهج التصميم للجوال أولاً. تتقلص قائمة التنقل بسلاسة إلى قائمة قابلة للتبديل على الشاشات الصغيرة لتجربة استخدام بديهية. 🚀 سير عمل فعال: تم تطويره باستخدام أداة البناء Vite السريعة جداً لتقليل الاعتماديات وتسريع دورة التطوير. 📈 بيانات مركزية: تتم إدارة جميع المحتويات الثابتة مثل روابط التنقل ووصف الميزات في ملف ثابت مركزي، مما يجعل تحديث الموقع وصيانته سهلاً. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو إثبات القدرة على تحويل تصميم عالي الدقة من Figma إلى تطبيق ويب متكامل الوظائف، متجاوب وجذاب بصرياً. يمثل هذا العمل إضافة قوية لمحفظة الأعمال، ويبرز أحدث ممارسات تطوير الواجهات الأمامية، والاهتمام الدقيق بتفاصيل تجربة المستخدم، وإتقان React.js وTailwind CSS.\n🚀 عرض المشروع الموقع المباشر: royalplatinum.surge.sh\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-02/","section":"projects","summary":"موقع واجهات مستخدم وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم بناؤه باستخدام React.js وTailwind CSS لترجمة تصميم Figma إلى موقع متجاوب ودقيق التفاصيل.","title":"رويال بلاتينوم: تصميم موقع لشركة خدمات مالية"},{"content":"OllieBites هو موقع ثابت متجاوب بالكامل تم تطويره كنموذج أولي حديث لعلامة وجبات سريعة. بصفتي المطور والمصمم الوحيد، تم بناء هذا المشروع بالكامل من الصفر، بدءاً من الفكرة والعلامة التجارية وصولاً إلى النشر النهائي.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: CSS وReactstrap الخرائط: Leaflet.js اللغة: JavaScript (ES6+) النشر: Netlify مع تكامل GitHub ✨ الميزات الرئيسية 🗺️ خرائط تفاعلية: تم دمج Leaflet.js لعرض مواقع المطاعم على خريطة ديناميكية وتفاعلية، مما يعزز تجربة المستخدم في البحث عن الفروع. 🎨 تصميم مخصص بالكامل: مسؤول عن تصميم واجهات وتجربة المستخدم بالكامل، والعلامة البصرية، وإنشاء المحتوى بما في ذلك الشعار والصور المخصصة. 📱 متجاوب بالكامل: تم بناؤه بنهج الجوال أولاً باستخدام Reactstrap لضمان تخطيط سلس وجذاب على جميع الأجهزة من الحواسيب إلى الهواتف الذكية. 🎬 سلايدر رئيسي جذاب: تتضمن الصفحة الرئيسية سلايدر ديناميكي لجذب انتباه المستخدم مباشرة بمحتوى ترويجي. 📈 تحسين محركات البحث: تم تطبيق أفضل ممارسات تحسين محركات البحث الأساسية لزيادة الظهور وسهولة البحث. 💡 هدف المشروع كان الهدف من هذا المشروع بناء نموذج أولي متكامل وجاهز للإنتاج لسلسلة مطاعم وجبات سريعة. يوضح هذا العمل تنفيذ المشروع من البداية للنهاية، بما في ذلك التصميم والتطوير والنشر. وقد كان بمثابة تمرين شامل لإنشاء تطبيق ويب يركز على المستخدم ويتميز بجاذبية بصرية من الصفر.\n🚀 عرض المشروع الموقع المباشر: oillebites.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-002/","section":"projects","summary":"نموذج أولي متجاوب بالكامل لعلامة وجبات سريعة، تم تصميمه وتطويره من الصفر. يتضمن خرائط تفاعلية باستخدام Leaflet.js وتصميم واجهات وتجربة مستخدم مخصص بالكامل.","title":"أولي-بايتس: نموذج أولي لموقع سلسلة وجبات سريعة"},{"content":"Brushstrokes هو نموذج أولي لمتجر إلكتروني متجاوب بالكامل صُمم لعلامة تجميل فاخرة. تم تطوير هذا الموقع الثابت من الصفر ليعرض واجهة متجر أنيقة ونظيفة، مع قوائم منتجات وصفحات تفاصيل شاملة لخلق تجربة تسوق متكاملة وسهلة الاستخدام.\n🛠️ التقنيات المستخدمة المكتبة الأساسية: React.js تصميم الواجهة: CSS3 مخصص إدارة البيانات: JSON الترميز: HTML5 اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🛍️ واجهة متجر إلكتروني: تتضمن جميع مكونات التجارة الإلكترونية الأساسية مثل شبكات عرض المنتجات وصفحات التفاصيل. 📄 محتوى مدعوم بـ JSON: يتم تحميل معلومات المنتجات (الأسماء، الأسعار، الوصف) ديناميكياً من ملف JSON محلي، مما يوضح إدارة البيانات الثابتة في تطبيق React. 📱 متجاوب بالكامل: تم تنسيقه بعناية لضمان تجربة سلسة على جميع الأجهزة من الشاشات الكبيرة إلى الهواتف المحمولة. 🎨 تصميم مخصص: تم تصميم وتطوير واجهة المستخدم وتجربة المستخدم بالكامل من الصفر، لخلق هوية علامة تجارية فريدة وجذابة للمتجر. 💨 تحريكات ديناميكية: تم تطبيق تحريكات وانتقالات ناعمة باستخدام CSS لتعزيز تفاعل المستخدم وإضفاء طابع عصري واحترافي. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو بناء نموذج أولي عملي وجذاب بصرياً لموقع تجارة إلكترونية لمنتجات العناية بالبشرة. يوضح هذا العمل القدرة على هيكلة وتطوير تطبيق React يدير بيانات المنتجات محلياً، مع التركيز على واجهة مستخدم عالية الجودة ومتجاوبة لتحسين تجربة التسوق للعملاء.\n🚀 عرض المشروع الموقع المباشر: brushstrokes.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-01/","section":"projects","summary":"نموذج أولي لمتجر إلكتروني متجاوب لعلامة تجميل، تم تطويره باستخدام React.js ويعرض منتجات وصفحات تفاصيل تعتمد على بيانات JSON.","title":"برش-ستروكس: نموذج أولي لمتجر منتجات العناية بالبشرة"},{"content":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل لا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\nما الذي يجعل Tailwind فريدة؟ في جوهرها، تعتمد Tailwind على منهجية الأدوات أولاً. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل bg-blue-500، px-4، وrounded-lg. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\nمنذ الإصدار 3، اعتمدت Tailwind الترجمة الفورية (JIT) بشكل افتراضي، حيث يتم توليد CSS الذي تستخدمه فقط. هذا يؤدي إلى بناءات فائقة السرعة وأحجام ملفات إنتاجية صغيرة جداً.\nما الجديد في Tailwind CSS 4.0+؟ تم إصدار Tailwind CSS 4.0 في يناير 2025، وقدمت إعادة كتابة ثورية مدعومة بمحرك Oxide المبني بلغة Rust. هذا أدى إلى أوقات بناء أسرع حتى 5 مرات وإعادة بناء فورية في أجزاء من الثانية.\n🔍 أبرز ميزات الإصدار 4.0: دعم CSS الحديث: ميزات مثل @layer، و@property، وcolor-mix()، واستعلامات الحاوية أصبحت مدمجة بالكامل وأساسية. إعداد يعتمد على CSS: يمكنك الآن تحديد الألوان والمسافات وغيرها من رموز التصميم باستخدام متغيرات CSS الأصلية—دون الحاجة لملفات إعداد JavaScript ثقيلة. إضافة Vite رسمية: إضافة مخصصة تضمن إعادة تحميل فورية وأداء عالي لمشاريع Vite. أدوات جديدة: دعم التحويلات ثلاثية الأبعاد، التدرجات المخروطية/الدائرية، متغيرات :not-، انتقالات @starting-style، وأحجام حقول النماذج الموسعة. تحديث v4.1 (أبريل 2025) توسّع التحديث 4.1 في التحكم الإبداعي بإضافة:\nظلال النصوص وظلال الألوان أدوات إخفاء CSS متغيرات overflow-wrap استعلامات وسائط pointer لتفاعل الأجهزة حلول بديلة عند تعطيل الجافاسكريبت لماذا يحبها المطورون في 2025 ❌ لا تضخم في CSS، ✅ بناءات سريعة: مع JIT والتنظيف المدمج، يبقى ملف CSS صغيراً وفعالاً. ⚙️ وضوح الإعداد مع متغيرات CSS: رموز التصميم متاحة كمتغيرات CSS أصلية، مما يسهل استخدامها وإعادة استخدامها وفحصها في المتصفح. 🌍 مصممة للأطر الحديثة: تندمج Tailwind بسلاسة مع أطر مثل Next.js وAstro وVue وSvelte دون فرض أنظمة مكونات معقدة. 💬 منظومة ومجتمع ضخم: من مكتبات رسمية مثل Tailwind UI وHeadless UI إلى إضافات الطرف الثالث وبيئة Tailwind Play، المنظومة تدعم المطورين على جميع المستويات. كيف تبدأ: الترقية أو مشروع جديد ✅ ترقية سريعة إلى v4.x إذا كنت تستخدم الإصدار 3.4+، استخدم دليل الترقية التلقائي الرسمي من Tailwind Labs. معظم سير العمل الحالية ستعمل مباشرة دون تعديل.\n🛠️ إعداد بسيط لمشاريع جديدة ثبّت Tailwind 4.0 أو أحدث عبر npm:\nnpm install tailwindcss ثم استوردها في ملف CSS الرئيسي:\n@import \u0026#34;tailwindcss\u0026#34;; لا حاجة لأي إعداد إضافي. ستحصل تلقائياً على اكتشاف المحتوى وجميع الميزات الحديثة بشكل افتراضي.\nأفضل الممارسات في 2025 الممارسة لماذا هي مهمة استخدم متغيرات CSS لتوحيد الثيمات عبر المكونات والتصاميم استغل استعلامات الحاوية لبناء تخطيطات متجاوبة بدون جافاسكريبت طبق متغيرات مركبة لتبسيط حالات hover/focus والتنسيق الديناميكي قلل من استخدام @apply للحفاظ على نظافة ملف الأنماط؛ استخدمه فقط للمكونات الأساسية حافظ على مسارات التنظيف لإزالة الأنماط غير المستخدمة بكفاءة خلاصة: هل تستحق Tailwind CSS التجربة؟ نعم—بكل تأكيد. Tailwind CSS في 2025 ليست مجرد أداة تنسيق أخرى، بل منظومة متكاملة تعزز الإنتاجية، وتفرض تصميماً متسقاً، وتتكيف مع معايير الويب الحديثة. الأمر ليس مجرد ضجة إعلامية—بل سرعة ومرونة ومتعة للمطور.\nسواء كنت تبني تطبيق React مع Vite، أو معرض أعمال في Astro، أو نظام تصميم من الصفر—Tailwind CSS تدعم كل ذلك.\n🚀 هل أنت مستعد للانطلاق؟ جرّب Tailwind Play لاختبار الأدوات مباشرة في المتصفح. استخدم التوثيقات الرسمية على tailwindcss.com لأدلة الترقية. جرّب ميزات الإصدار الرابع: استعلامات الحاوية، الأدوات الجديدة، ودعم الوضع الليلي. Tailwind CSS في 2025 ليست مجرد أداة مهمة—بل أصبحت أساسية.\nإذا كنت تعمل في تطوير الواجهات الأمامية، فهي أداة تستحق الإتقان.\n","permalink":"http://localhost:1313/ar/blog/posts/tailwind-css-in-2025-fast-flexible--future-ready/","section":"blog","summary":"\u003ch1 id=\"tailwind-css-في-2025-سريع-مرن-ومستعد-للمستقبل\"\u003eTailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل\u003c/h1\u003e\n\u003cp\u003eلا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\u003c/p\u003e\n\u003ch2 id=\"ما-الذي-يجعل-tailwind-فريدة\"\u003eما الذي يجعل Tailwind فريدة؟\u003c/h2\u003e\n\u003cp\u003eفي جوهرها، تعتمد Tailwind على منهجية \u003cstrong\u003eالأدوات أولاً\u003c/strong\u003e. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل \u003ccode\u003ebg-blue-500\u003c/code\u003e، \u003ccode\u003epx-4\u003c/code\u003e، و\u003ccode\u003erounded-lg\u003c/code\u003e. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\u003c/p\u003e","title":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل"},{"content":"Vite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها Vite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\n🚀 لماذا Vite سريعة جداً؟ تستفيد Vite من وحدات ES الأصلية (ESM)\rفي المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\nتستخدم esbuild\r، وهي أداة تجميع JavaScript فائقة السرعة مكتوبة بلغة Go، لمعالجة التبعيات، مما يجعلها أسرع من أدوات التجميع التقليدية مثل Webpack بما يصل إلى 10–100 مرة.\n🧠 الميزات الرئيسية تشغيل فوري للخادم: يبدأ الخادم تقريباً فوراً بغض النظر عن حجم تطبيقك. تحديث فوري للوحدات (HMR): تظهر التغييرات في المتصفح بمجرد الحفظ، دون إعادة تحميل كاملة. بناء إنتاجي محسن: يستخدم Rollup في الخلفية لإخراج إنتاجي عالي الأداء ودقيق. دعم جاهز للأطر: يعمل بسلاسة مع Vue وReact وPreact وSvelte وغيرها. إعداد بسيط ومرونة عالية: ملف الإعداد اختياري، وعند الحاجة يكون بسيطاً وبديهياً. 🛠️ كيف تبدأ مع Vite يمكنك إنشاء مشروع Vite في ثوانٍ:\nnpm create vite@latest my-app cd my-app npm install npm run dev ستحصل فوراً على خادم تطوير سريع جداً مع إعادة تحميل مباشرة.\n📦 Vite + React/Next/Vue؟ نعم — تعمل Vite بشكل رائع مع React وVue وحتى Svelte. في الواقع، يفضل العديد من المطورين Vite على Create React App أو Vue CLI بسبب سرعتها وبساطتها.\nإذا كنت تبني شيئاً باستخدام Next.js، فهي لا تزال خياراً ممتازاً للتطبيقات التي تعتمد على SSR. أما إذا كنت تطور تطبيقات صفحة واحدة (SPA) أو مواقع ثابتة، فقد توفر Vite تجربة أكثر سلاسة.\n🤔 هل يجب أن تستخدم Vite؟ إذا كنت تهتم بـ:\nدورات تطوير أسرع إعداد أبسط بناء إنتاجي عالي الأداء فالإجابة نعم، Vite مناسبة لك.\n🔚 الخلاصة Vite ليست مجرد خادم تطوير أسرع — بل هي منظومة متكاملة صُممت بعناية لتطوير الواجهات الأمامية الحديثة. ومع تطور عالم JavaScript، تبرز Vite كأداة تجمع بين السرعة والبساطة.\n💡 سواء كنت تبني معرض أعمال بسيط أو تطبيقاً إنتاجياً متقدماً، جرب Vite — قد تدمن سرعتها ولا ترضى بغيرها.\nمصادر الموقع الرسمي\rمستودع GitHub\r","permalink":"http://localhost:1313/ar/blog/posts/getting-started-with-vite-the-next-gen-frontend-build-tool/","section":"blog","summary":"\u003ch1 id=\"vite-أسرع-أداة-تطوير-للواجهات-الأمامية-ربما-لم-تكن-تعرف-أنك-بحاجة-إليها\"\u003eVite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها\u003c/h1\u003e\n\u003cp\u003eVite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"-لماذا-vite-سريعة-جدا\"\u003e🚀 لماذا Vite سريعة جداً؟\u003c/h2\u003e\n\u003cp\u003eتستفيد Vite من \r\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\r\n  وحدات ES الأصلية (ESM)\r\n\u003c/a\u003e\r\n في المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\u003c/p\u003e","title":"Vite: أسرع أداة تطوير للواجهات الأمامية قد لا تعلم أنك بحاجة إليها"},{"content":"سايبر مون هو نموذج أولي حديث لشركة تقنية خيالية متخصصة في تطوير تطبيقات الويب والموبايل، وخدمات السحابة، وتكامل الذكاء الاصطناعي. تم تصميم هذا المشروع وبرمجته كعمل ضمن معرض الأعمال، ليبرز مهاراتي في تطوير واجهات المستخدم المتجاوبة، والهندسة المعمارية القائمة على المكونات، وتصميم المواقع الموجه بالهوية البصرية.\n🛠️ التقنيات المستخدمة الإطار: Next.js (React) تصميم الواجهة: Tailwind CSS التحريكات: مكتبة AOS (Animate On Scroll) الثيمات: next-themes للوضع الليلي/النهاري النشر: Vercel ✨ الميزات الرئيسية 🌗 وضع ليلي/نهاري: تبديل سلس بين الوضعين مع حفظ التفضيل عبر الجلسات باستخدام next-themes. 🧱 تصميم معياري: مبني بمكونات React قابلة لإعادة الاستخدام لأقسام رئيسية مثل التنقل، والخدمات، وشهادات العملاء، ومعاينات المدونة. 🖼️ واجهة متحركة: تم تطبيق تأثيرات تلاشي وانزلاق أنيقة عند التمرير باستخدام مكتبة AOS لتعزيز تفاعل المستخدم. 📱 متجاوب بالكامل: تصميم يركز على الجوال أولاً مع قائمة جانبية تضمن تجربة سلسة على جميع الأجهزة. 🎨 هوية بصرية مخصصة: يستخدم التصميم خط Rajdhani ولوحة ألوان مستوحاة من الفضاء لإضفاء طابع تقني قوي وحديث. 🚀 أداء محسن: الموقع محسن لسرعة التحميل ومُستضاف على Vercel المعروفة بأدائها العالي مع تطبيقات Next.js. 💡 الهدف وفلسفة التصميم باعتباره مشروعاً لمعرض الأعمال، كان الهدف الأساسي من Cyber Moon هو إبراز القدرات التقنية والتصميمية في سياق واقعي. استُلهم التوجه البصري من الفضاء، باستخدام درجات الأزرق الداكن والرمادي الناعم ولمسات ذهبية، لخلق واجهة نظيفة وعصرية ومبهرة للعملاء أو أصحاب العمل المحتملين. يمثل هذا المشروع نموذجاً عالي الدقة لما يمكنني تقديمه.\n🚀 عرض المشروع الموقع المباشر: cyber-moon.vercel.app\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-012/","section":"projects","summary":"نموذج أولي متجاوب لشركة تقنية خيالية، يبرز بنية معمارية قائمة على المكونات باستخدام Next.js، وتصميم متجاوب مع Tailwind CSS، وتحريكات تمرير أنيقة.","title":"القمر الرقمي: نموذج أولي لشركة ناشئة في مجال التكنولوجيا الخيالية"},{"content":"تم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\nما هي React.js؟ React.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\nتركز React فقط على طبقة العرض (View) من معمارية MVC، مما يجعلها خفيفة وسهلة الدمج مع مكتبات أو أطر عمل أخرى.\nالميزات الرئيسية في React 1. بنية قائمة على المكونات تشجع React على تطوير مكونات قابلة لإعادة الاستخدام، مما يعزز صيانة الكود وقابليته للتوسع. كل مكون يدير حالته الخاصة ويعرض نفسه بناءً على تلك الحالة.\n2. JSX – جافاسكريبت XML يتيح JSX للمطورين كتابة هياكل HTML مباشرة داخل جافاسكريبت، مما يجعل الكود أسهل قراءة وصيانة.\nconst Hello = () =\u0026gt; \u0026lt;h1\u0026gt;Hello, World!\u0026lt;/h1\u0026gt;; 3. DOM افتراضي تستخدم React DOM افتراضي لتتبع التغييرات وتحديث الأجزاء المتغيرة فقط من الواجهة بكفاءة، مما يؤدي إلى عرض أسرع وأداء أفضل.\n4. ربط بيانات باتجاه واحد تطبق React ربط بيانات باتجاه واحد، أي أن البيانات تتدفق من المكون الأب إلى الأبناء، مما يجعل إدارة البيانات أكثر قابلية للتنبؤ وأسهل في التصحيح.\n5. منظومة غنية تتمتع React بمنظومة غنية تشمل أدوات مثل React Router للتنقل، وRedux لإدارة الحالة، وNext.js للعرض من جهة الخادم.\nلماذا تستخدم React؟ الكفاءة: الـ DOM الافتراضي يحسن أداء العرض. التركيبية: المكونات القابلة لإعادة الاستخدام تؤدي إلى كود أنظف وأسهل في الصيانة. مجتمع ضخم: لدى React مجتمع مطورين واسع وتوثيقات ممتازة. فرص عمل: React مطلوبة بشدة في سوق العمل، ما يجعلها مهارة ذات قيمة عالية. كيف تبدأ مع React يمكنك البدء مع React بتثبيتها عبر npm:\nnpx create-react-app my-app cd my-app npm start سيتم إعداد بيئة تطوير متكاملة مع إعادة تحميل فوري، وفحص الكود، ودعم ميزات جافاسكريبت الحديثة.\nالخلاصة تمكن React.js المطورين من بناء واجهات مستخدم سريعة وقابلة للتوسع وتفاعلية. شعبيتها وتنوع استخداماتها يجعلها تقنية أساسية في تطوير الويب الحديث. إذا كنت تطمح لأن تصبح مطور واجهات أمامية أو تعزز مهاراتك في جافاسكريبت، فإن تعلم React أمر لا غنى عنه.\n","permalink":"http://localhost:1313/ar/blog/posts/reactjs-blog-post/","section":"blog","summary":"\u003cp\u003eتم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\u003c/p\u003e\n\u003ch2 id=\"ما-هي-reactjs\"\u003eما هي React.js؟\u003c/h2\u003e\n\u003cp\u003eReact.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\u003c/p\u003e","title":"React.js: عملاق الواجهات الأمامية الذي تحتاجه في 2025"},{"content":"Why Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀 !http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\nIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where Next.js, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\nOne Framework, So Many Ways to Render This is the killer feature. With Next.js, you\u0026rsquo;re not locked into one way of doing things. You get to choose the best rendering strategy for each page.\nStatic Site Generation (SSG): Perfect for pages that don\u0026rsquo;t change often, like a blog post or a product landing page. The page is built once and served instantly from a CDN. The result? Blazing-fast load times. Server-Side Rendering (SSR): Need to show user-specific data? SSR generates the page on the server for every request, ensuring the content is always fresh. It\u0026rsquo;s ideal for dashboards and user profiles. Incremental Static Regeneration (ISR): This is the best of both worlds. You can have a static page that automatically rebuilds itself in the background after a set time. Your site stays fast, but the content is never stale. Client-Side Rendering (CSR): Still want the classic single-page app experience? You can do that too, all within the same application. This hybrid approach means you can optimize every single part of your app for maximum performance and efficiency.\nتجربة تطوير أفضل للمبرمجين !http://googleusercontent.com/image_collection/image_retrieval/7573518744484272445\nNext.js مليء بالميزات التي تجعل حياتك كمطور أكثر سهولة ومتعة.\nتوجيه قائم على الملفات: انسَ مكتبات التوجيه المعقدة. تريد صفحة جديدة على /about؟ فقط أنشئ ملفاً باسم about.js في مجلد الصفحات. بهذه البساطة والوضوح. تحديث فوري: عدّل الكود وسترى التغيير في المتصفح فوراً دون فقدان حالة المكون. هذا يجعل التطوير وتصحيح الأخطاء سريعاً للغاية. تحسينات مدمجة: يأتي Next.js مع تحسين تلقائي للصور، وتقسيم الكود، والمزيد مباشرة من البداية. يتولى المهام الثقيلة لتتمكن من التركيز على بناء الميزات. أداء يبهر المستخدمين وجوجل !http://googleusercontent.com/image_collection/image_retrieval/7999868972524234138\nفي النهاية، كل شيء يتعلق بالأداء. المواقع البطيئة تخسر المستخدمين وتحتل ترتيباً سيئاً في محركات البحث. تم بناء Next.js من الأساس ليكون سريعاً.\nمن خلال استراتيجيات العرض الذكية والتحسينات التلقائية، يساعدك Next.js على بناء مواقع تحقق نتائج عالية في مؤشرات Google Core Web Vitals. هذا يؤدي إلى ترتيب SEO أفضل، والأهم من ذلك، مستخدمون أكثر رضا لأنهم لا ينتظرون تحميل الصفحات.\n!http://googleusercontent.com/image_collection/image_retrieval/1237750557036671416\nالخلاصة Next.js ليس مجرد موضة؛ بل هو الخطوة المنطقية التالية لتطوير الويب الجاد. يجمع بين قوة React وهندسة معمارية مدروسة تركز على الأداء وتحل مشاكل المطورين الحقيقية. إذا كنت تريد بناء تطبيقات ويب سريعة وقابلة للتوسع وحديثة دون متاعب التطوير المعتادة، فـ Next.js هو أفضل مكان للانطلاق.\n","permalink":"http://localhost:1313/ar/blog/posts/next.js-is-your-new-secret-weapon-for-building-awesome-web-apps/","section":"blog","summary":"\u003ch1 id=\"why-nextjs-is-your-new-secret-weapon-for-building-awesome-web-apps-\"\u003eWhy Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀\u003c/h1\u003e\n\u003cp\u003e!http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where \u003cstrong\u003eNext.js\u003c/strong\u003e, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\u003c/p\u003e","title":"Next.js: سلاحك السري الجديد لبناء تطبيقات ويب مذهلة"},{"content":"موقعي الشخصي\n","permalink":"http://localhost:1313/ar/blog/posts/my-best-website/","section":"blog","summary":"\u003cp\u003eموقعي الشخصي\u003c/p\u003e","title":"أفضل موقع لي"},{"content":"قمت بتطوير موقع إلكتروني حديث ومتجاوب لشركة أبراج بلاتينيوم ذ.م.م.، الرائدة في تقديم حلول الألياف الضوئية والشبكات في سوريا. كان هدف المشروع إنشاء حضور رقمي احترافي يعرض خدماتهم التقنية المتقدمة ويعزز مكانتهم كلاعب رئيسي في قطاع البنية التحتية للاتصالات.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js أداة البناء: Vite التوجيه: React Router التحريكات: React Spring \u0026amp; React Typing Effect تصميم الواجهة: CSS3 النقي مع استعلامات الوسائط خدمة الخلفية: Web3Forms API (لنموذج التواصل) ✨ الميزات الرئيسية 📱 تصميم متجاوب بالكامل: يتكيف التصميم مع جميع أحجام الشاشات، مع قائمة تنقل جانبية أنيقة وقابلة للتبديل لتجربة مثالية على الجوال. 🎨 شريط تنقل ديناميكي: شريط تنقل ثابت يتحول من شفاف إلى خلفية صلبة عند التمرير، لضمان سهولة التنقل. 💼 نموذج تواصل فعال: نموذج تواصل يعمل بكفاءة يلتقط بيانات المستخدم ويرسلها مباشرة إلى بريد الإدارة باستخدام Web3Forms API. 🎬 مشغل فيديو مدمج: مشغل فيديو يظهر كنافذة منبثقة من قسم \u0026ldquo;من نحن\u0026rdquo;، لعرض محتوى مرئي تفاعلي دون مغادرة الصفحة. 💨 تمرير سلس: تم استخدام مكتبة react-scroll لتفعيل التمرير السلس عند النقر على روابط التنقل. 🖼️ أقسام تفاعلية: يحتوي الموقع على عدة أقسام تفاعلية، منها معرض صور أنيق بأربع أعمدة، وسلايدر شهادات العملاء، وبطاقات برامج تفاعلية عند المرور عليها. 💡 هدف المشروع كان الهدف الأساسي هو إنشاء واجهة رقمية احترافية توضح بوضوح خدمات أبراج بلاتينيوم المتخصصة في قطاع الألياف الضوئية. تم تصميم الموقع لتعزيز علامتهم التجارية كقائد تقني حديث وموثوق، وتوفير نقطة تواصل واضحة للعملاء المحتملين الباحثين عن حلول شبكات.\n🚀 عرض المشروع الموقع المباشر: abrajplatinum.com\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-01/","section":"projects","summary":"تم تطوير موقع إلكتروني عصري واحترافي لشركة متخصصة في حلول الألياف الضوئية والشبكات، بهدف إبراز خبراتهم التقنية وتعزيز حضورهم الرقمي.","title":"أبراج بلاتينوم: موقع لحلول الألياف الضوئية"},{"content":"رويال بلاتينيوم هو موقع واجهات وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم تطويره كتطبيق صفحة واحدة متجاوب بالكامل. ركز هذا المشروع النموذجي على ترجمة تصميم Figma الاحترافي إلى موقع عالي الأداء، مع إبراز بنية مكونات نظيفة وتنسيق دقيق باستخدام Tailwind CSS.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: Tailwind CSS أداة البناء: Vite اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🎨 تصميم دقيق مطابق للأصل: تم تنفيذ التصميم بعناية ليطابق تصميم Figma الأصلي، مع صور عالية الجودة وتدرجات أنيقة وواجهة داكنة نظيفة تعكس الاحترافية والثقة. 🧱 مكونات قابلة لإعادة الاستخدام: تم بناء الموقع على أساس مكونات قابلة لإعادة الاستخدام لإحصائيات الأعمال، والميزات، وشهادات العملاء وغيرها، لضمان كود نظيف وسهل الصيانة. 📱 متجاوب بالكامل: تم تحسينه لجميع الأجهزة مع نهج التصميم للجوال أولاً. تتقلص قائمة التنقل بسلاسة إلى قائمة قابلة للتبديل على الشاشات الصغيرة لتجربة استخدام بديهية. 🚀 سير عمل فعال: تم تطويره باستخدام أداة البناء Vite السريعة جداً لتقليل الاعتماديات وتسريع دورة التطوير. 📈 بيانات مركزية: تتم إدارة جميع المحتويات الثابتة مثل روابط التنقل ووصف الميزات في ملف ثابت مركزي، مما يجعل تحديث الموقع وصيانته سهلاً. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو إثبات القدرة على تحويل تصميم عالي الدقة من Figma إلى تطبيق ويب متكامل الوظائف، متجاوب وجذاب بصرياً. يمثل هذا العمل إضافة قوية لمحفظة الأعمال، ويبرز أحدث ممارسات تطوير الواجهات الأمامية، والاهتمام الدقيق بتفاصيل تجربة المستخدم، وإتقان React.js وTailwind CSS.\n🚀 عرض المشروع الموقع المباشر: royalplatinum.surge.sh\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-02/","section":"projects","summary":"موقع واجهات مستخدم وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم بناؤه باستخدام React.js وTailwind CSS لترجمة تصميم Figma إلى موقع متجاوب ودقيق التفاصيل.","title":"رويال بلاتينوم: تصميم موقع لشركة خدمات مالية"},{"content":"OllieBites هو موقع ثابت متجاوب بالكامل تم تطويره كنموذج أولي حديث لعلامة وجبات سريعة. بصفتي المطور والمصمم الوحيد، تم بناء هذا المشروع بالكامل من الصفر، بدءاً من الفكرة والعلامة التجارية وصولاً إلى النشر النهائي.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: CSS وReactstrap الخرائط: Leaflet.js اللغة: JavaScript (ES6+) النشر: Netlify مع تكامل GitHub ✨ الميزات الرئيسية 🗺️ خرائط تفاعلية: تم دمج Leaflet.js لعرض مواقع المطاعم على خريطة ديناميكية وتفاعلية، مما يعزز تجربة المستخدم في البحث عن الفروع. 🎨 تصميم مخصص بالكامل: مسؤول عن تصميم واجهات وتجربة المستخدم بالكامل، والعلامة البصرية، وإنشاء المحتوى بما في ذلك الشعار والصور المخصصة. 📱 متجاوب بالكامل: تم بناؤه بنهج الجوال أولاً باستخدام Reactstrap لضمان تخطيط سلس وجذاب على جميع الأجهزة من الحواسيب إلى الهواتف الذكية. 🎬 سلايدر رئيسي جذاب: تتضمن الصفحة الرئيسية سلايدر ديناميكي لجذب انتباه المستخدم مباشرة بمحتوى ترويجي. 📈 تحسين محركات البحث: تم تطبيق أفضل ممارسات تحسين محركات البحث الأساسية لزيادة الظهور وسهولة البحث. 💡 هدف المشروع كان الهدف من هذا المشروع بناء نموذج أولي متكامل وجاهز للإنتاج لسلسلة مطاعم وجبات سريعة. يوضح هذا العمل تنفيذ المشروع من البداية للنهاية، بما في ذلك التصميم والتطوير والنشر. وقد كان بمثابة تمرين شامل لإنشاء تطبيق ويب يركز على المستخدم ويتميز بجاذبية بصرية من الصفر.\n🚀 عرض المشروع الموقع المباشر: oillebites.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-002/","section":"projects","summary":"نموذج أولي متجاوب بالكامل لعلامة وجبات سريعة، تم تصميمه وتطويره من الصفر. يتضمن خرائط تفاعلية باستخدام Leaflet.js وتصميم واجهات وتجربة مستخدم مخصص بالكامل.","title":"أولي-بايتس: نموذج أولي لموقع سلسلة وجبات سريعة"},{"content":"Brushstrokes هو نموذج أولي لمتجر إلكتروني متجاوب بالكامل صُمم لعلامة تجميل فاخرة. تم تطوير هذا الموقع الثابت من الصفر ليعرض واجهة متجر أنيقة ونظيفة، مع قوائم منتجات وصفحات تفاصيل شاملة لخلق تجربة تسوق متكاملة وسهلة الاستخدام.\n🛠️ التقنيات المستخدمة المكتبة الأساسية: React.js تصميم الواجهة: CSS3 مخصص إدارة البيانات: JSON الترميز: HTML5 اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🛍️ واجهة متجر إلكتروني: تتضمن جميع مكونات التجارة الإلكترونية الأساسية مثل شبكات عرض المنتجات وصفحات التفاصيل. 📄 محتوى مدعوم بـ JSON: يتم تحميل معلومات المنتجات (الأسماء، الأسعار، الوصف) ديناميكياً من ملف JSON محلي، مما يوضح إدارة البيانات الثابتة في تطبيق React. 📱 متجاوب بالكامل: تم تنسيقه بعناية لضمان تجربة سلسة على جميع الأجهزة من الشاشات الكبيرة إلى الهواتف المحمولة. 🎨 تصميم مخصص: تم تصميم وتطوير واجهة المستخدم وتجربة المستخدم بالكامل من الصفر، لخلق هوية علامة تجارية فريدة وجذابة للمتجر. 💨 تحريكات ديناميكية: تم تطبيق تحريكات وانتقالات ناعمة باستخدام CSS لتعزيز تفاعل المستخدم وإضفاء طابع عصري واحترافي. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو بناء نموذج أولي عملي وجذاب بصرياً لموقع تجارة إلكترونية لمنتجات العناية بالبشرة. يوضح هذا العمل القدرة على هيكلة وتطوير تطبيق React يدير بيانات المنتجات محلياً، مع التركيز على واجهة مستخدم عالية الجودة ومتجاوبة لتحسين تجربة التسوق للعملاء.\n🚀 عرض المشروع الموقع المباشر: brushstrokes.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-01/","section":"projects","summary":"نموذج أولي لمتجر إلكتروني متجاوب لعلامة تجميل، تم تطويره باستخدام React.js ويعرض منتجات وصفحات تفاصيل تعتمد على بيانات JSON.","title":"برش-ستروكس: نموذج أولي لمتجر منتجات العناية بالبشرة"},{"content":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل لا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\nما الذي يجعل Tailwind فريدة؟ في جوهرها، تعتمد Tailwind على منهجية الأدوات أولاً. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل bg-blue-500، px-4، وrounded-lg. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\nمنذ الإصدار 3، اعتمدت Tailwind الترجمة الفورية (JIT) بشكل افتراضي، حيث يتم توليد CSS الذي تستخدمه فقط. هذا يؤدي إلى بناءات فائقة السرعة وأحجام ملفات إنتاجية صغيرة جداً.\nما الجديد في Tailwind CSS 4.0+؟ تم إصدار Tailwind CSS 4.0 في يناير 2025، وقدمت إعادة كتابة ثورية مدعومة بمحرك Oxide المبني بلغة Rust. هذا أدى إلى أوقات بناء أسرع حتى 5 مرات وإعادة بناء فورية في أجزاء من الثانية.\n🔍 أبرز ميزات الإصدار 4.0: دعم CSS الحديث: ميزات مثل @layer، و@property، وcolor-mix()، واستعلامات الحاوية أصبحت مدمجة بالكامل وأساسية. إعداد يعتمد على CSS: يمكنك الآن تحديد الألوان والمسافات وغيرها من رموز التصميم باستخدام متغيرات CSS الأصلية—دون الحاجة لملفات إعداد JavaScript ثقيلة. إضافة Vite رسمية: إضافة مخصصة تضمن إعادة تحميل فورية وأداء عالي لمشاريع Vite. أدوات جديدة: دعم التحويلات ثلاثية الأبعاد، التدرجات المخروطية/الدائرية، متغيرات :not-، انتقالات @starting-style، وأحجام حقول النماذج الموسعة. تحديث v4.1 (أبريل 2025) توسّع التحديث 4.1 في التحكم الإبداعي بإضافة:\nظلال النصوص وظلال الألوان أدوات إخفاء CSS متغيرات overflow-wrap استعلامات وسائط pointer لتفاعل الأجهزة حلول بديلة عند تعطيل الجافاسكريبت لماذا يحبها المطورون في 2025 ❌ لا تضخم في CSS، ✅ بناءات سريعة: مع JIT والتنظيف المدمج، يبقى ملف CSS صغيراً وفعالاً. ⚙️ وضوح الإعداد مع متغيرات CSS: رموز التصميم متاحة كمتغيرات CSS أصلية، مما يسهل استخدامها وإعادة استخدامها وفحصها في المتصفح. 🌍 مصممة للأطر الحديثة: تندمج Tailwind بسلاسة مع أطر مثل Next.js وAstro وVue وSvelte دون فرض أنظمة مكونات معقدة. 💬 منظومة ومجتمع ضخم: من مكتبات رسمية مثل Tailwind UI وHeadless UI إلى إضافات الطرف الثالث وبيئة Tailwind Play، المنظومة تدعم المطورين على جميع المستويات. كيف تبدأ: الترقية أو مشروع جديد ✅ ترقية سريعة إلى v4.x إذا كنت تستخدم الإصدار 3.4+، استخدم دليل الترقية التلقائي الرسمي من Tailwind Labs. معظم سير العمل الحالية ستعمل مباشرة دون تعديل.\n🛠️ إعداد بسيط لمشاريع جديدة ثبّت Tailwind 4.0 أو أحدث عبر npm:\nnpm install tailwindcss ثم استوردها في ملف CSS الرئيسي:\n@import \u0026#34;tailwindcss\u0026#34;; لا حاجة لأي إعداد إضافي. ستحصل تلقائياً على اكتشاف المحتوى وجميع الميزات الحديثة بشكل افتراضي.\nأفضل الممارسات في 2025 الممارسة لماذا هي مهمة استخدم متغيرات CSS لتوحيد الثيمات عبر المكونات والتصاميم استغل استعلامات الحاوية لبناء تخطيطات متجاوبة بدون جافاسكريبت طبق متغيرات مركبة لتبسيط حالات hover/focus والتنسيق الديناميكي قلل من استخدام @apply للحفاظ على نظافة ملف الأنماط؛ استخدمه فقط للمكونات الأساسية حافظ على مسارات التنظيف لإزالة الأنماط غير المستخدمة بكفاءة خلاصة: هل تستحق Tailwind CSS التجربة؟ نعم—بكل تأكيد. Tailwind CSS في 2025 ليست مجرد أداة تنسيق أخرى، بل منظومة متكاملة تعزز الإنتاجية، وتفرض تصميماً متسقاً، وتتكيف مع معايير الويب الحديثة. الأمر ليس مجرد ضجة إعلامية—بل سرعة ومرونة ومتعة للمطور.\nسواء كنت تبني تطبيق React مع Vite، أو معرض أعمال في Astro، أو نظام تصميم من الصفر—Tailwind CSS تدعم كل ذلك.\n🚀 هل أنت مستعد للانطلاق؟ جرّب Tailwind Play لاختبار الأدوات مباشرة في المتصفح. استخدم التوثيقات الرسمية على tailwindcss.com لأدلة الترقية. جرّب ميزات الإصدار الرابع: استعلامات الحاوية، الأدوات الجديدة، ودعم الوضع الليلي. Tailwind CSS في 2025 ليست مجرد أداة مهمة—بل أصبحت أساسية.\nإذا كنت تعمل في تطوير الواجهات الأمامية، فهي أداة تستحق الإتقان.\n","permalink":"http://localhost:1313/ar/blog/posts/tailwind-css-in-2025-fast-flexible--future-ready/","section":"blog","summary":"\u003ch1 id=\"tailwind-css-في-2025-سريع-مرن-ومستعد-للمستقبل\"\u003eTailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل\u003c/h1\u003e\n\u003cp\u003eلا تزال Tailwind CSS واحدة من أقوى وأكثر أطر CSS شعبية. في عام 2025، تجلب النسخة 4.x ابتكارات تجعلها أسرع وأكثر سهولة وتوافقاً تاماً مع معايير الويب الحديثة.\u003c/p\u003e\n\u003ch2 id=\"ما-الذي-يجعل-tailwind-فريدة\"\u003eما الذي يجعل Tailwind فريدة؟\u003c/h2\u003e\n\u003cp\u003eفي جوهرها، تعتمد Tailwind على منهجية \u003cstrong\u003eالأدوات أولاً\u003c/strong\u003e. بدلاً من مكونات جاهزة مثل الأزرار أو البطاقات، تقوم بتكوين الأنماط باستخدام كلاسات صغيرة ومحددة مباشرة في HTML الخاص بك—مثل \u003ccode\u003ebg-blue-500\u003c/code\u003e، \u003ccode\u003epx-4\u003c/code\u003e، و\u003ccode\u003erounded-lg\u003c/code\u003e. هذا النهج يسرّع عملية النمذجة بشكل كبير، ويُلغي الحاجة لملفات CSS مخصصة، ويعزز نظام تصميم متسق.\u003c/p\u003e","title":"Tailwind CSS في 2025: سريع، مرن، ومستعد للمستقبل"},{"content":"Vite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها Vite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\n🚀 لماذا Vite سريعة جداً؟ تستفيد Vite من وحدات ES الأصلية (ESM)\rفي المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\nتستخدم esbuild\r، وهي أداة تجميع JavaScript فائقة السرعة مكتوبة بلغة Go، لمعالجة التبعيات، مما يجعلها أسرع من أدوات التجميع التقليدية مثل Webpack بما يصل إلى 10–100 مرة.\n🧠 الميزات الرئيسية تشغيل فوري للخادم: يبدأ الخادم تقريباً فوراً بغض النظر عن حجم تطبيقك. تحديث فوري للوحدات (HMR): تظهر التغييرات في المتصفح بمجرد الحفظ، دون إعادة تحميل كاملة. بناء إنتاجي محسن: يستخدم Rollup في الخلفية لإخراج إنتاجي عالي الأداء ودقيق. دعم جاهز للأطر: يعمل بسلاسة مع Vue وReact وPreact وSvelte وغيرها. إعداد بسيط ومرونة عالية: ملف الإعداد اختياري، وعند الحاجة يكون بسيطاً وبديهياً. 🛠️ كيف تبدأ مع Vite يمكنك إنشاء مشروع Vite في ثوانٍ:\nnpm create vite@latest my-app cd my-app npm install npm run dev ستحصل فوراً على خادم تطوير سريع جداً مع إعادة تحميل مباشرة.\n📦 Vite + React/Next/Vue؟ نعم — تعمل Vite بشكل رائع مع React وVue وحتى Svelte. في الواقع، يفضل العديد من المطورين Vite على Create React App أو Vue CLI بسبب سرعتها وبساطتها.\nإذا كنت تبني شيئاً باستخدام Next.js، فهي لا تزال خياراً ممتازاً للتطبيقات التي تعتمد على SSR. أما إذا كنت تطور تطبيقات صفحة واحدة (SPA) أو مواقع ثابتة، فقد توفر Vite تجربة أكثر سلاسة.\n🤔 هل يجب أن تستخدم Vite؟ إذا كنت تهتم بـ:\nدورات تطوير أسرع إعداد أبسط بناء إنتاجي عالي الأداء فالإجابة نعم، Vite مناسبة لك.\n🔚 الخلاصة Vite ليست مجرد خادم تطوير أسرع — بل هي منظومة متكاملة صُممت بعناية لتطوير الواجهات الأمامية الحديثة. ومع تطور عالم JavaScript، تبرز Vite كأداة تجمع بين السرعة والبساطة.\n💡 سواء كنت تبني معرض أعمال بسيط أو تطبيقاً إنتاجياً متقدماً، جرب Vite — قد تدمن سرعتها ولا ترضى بغيرها.\nمصادر الموقع الرسمي\rمستودع GitHub\r","permalink":"http://localhost:1313/ar/blog/posts/getting-started-with-vite-the-next-gen-frontend-build-tool/","section":"blog","summary":"\u003ch1 id=\"vite-أسرع-أداة-تطوير-للواجهات-الأمامية-ربما-لم-تكن-تعرف-أنك-بحاجة-إليها\"\u003eVite: أسرع أداة تطوير للواجهات الأمامية ربما لم تكن تعرف أنك بحاجة إليها\u003c/h1\u003e\n\u003cp\u003eVite (تُنطق \u0026ldquo;فيت\u0026rdquo; مثل كلمة \u0026ldquo;سريع\u0026rdquo; بالفرنسية) هي أداة بناء حديثة أحدثت ثورة في طريقة تطوير تطبيقات الواجهات الأمامية. أنشأها Evan You (مؤلف Vue.js)، وتوفر Vite تجربة تطوير فائقة السرعة وبناء إنتاجي محسن مع أقل قدر من الإعداد.\u003c/p\u003e\n\u003chr\u003e\n\u003ch2 id=\"-لماذا-vite-سريعة-جدا\"\u003e🚀 لماذا Vite سريعة جداً؟\u003c/h2\u003e\n\u003cp\u003eتستفيد Vite من \r\n\u003ca href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules\" target=\"_blank\" rel=\"noopener noreferrer\"\u003e\r\n  وحدات ES الأصلية (ESM)\r\n\u003c/a\u003e\r\n في المتصفحات الحديثة أثناء التطوير. بدلاً من تجميع جميع ملفات JavaScript في ملف واحد ضخم، ترسل Vite فقط ما يحتاجه المتصفح — فوراً.\u003c/p\u003e","title":"Vite: أسرع أداة تطوير للواجهات الأمامية قد لا تعلم أنك بحاجة إليها"},{"content":"سايبر مون هو نموذج أولي حديث لشركة تقنية خيالية متخصصة في تطوير تطبيقات الويب والموبايل، وخدمات السحابة، وتكامل الذكاء الاصطناعي. تم تصميم هذا المشروع وبرمجته كعمل ضمن معرض الأعمال، ليبرز مهاراتي في تطوير واجهات المستخدم المتجاوبة، والهندسة المعمارية القائمة على المكونات، وتصميم المواقع الموجه بالهوية البصرية.\n🛠️ التقنيات المستخدمة الإطار: Next.js (React) تصميم الواجهة: Tailwind CSS التحريكات: مكتبة AOS (Animate On Scroll) الثيمات: next-themes للوضع الليلي/النهاري النشر: Vercel ✨ الميزات الرئيسية 🌗 وضع ليلي/نهاري: تبديل سلس بين الوضعين مع حفظ التفضيل عبر الجلسات باستخدام next-themes. 🧱 تصميم معياري: مبني بمكونات React قابلة لإعادة الاستخدام لأقسام رئيسية مثل التنقل، والخدمات، وشهادات العملاء، ومعاينات المدونة. 🖼️ واجهة متحركة: تم تطبيق تأثيرات تلاشي وانزلاق أنيقة عند التمرير باستخدام مكتبة AOS لتعزيز تفاعل المستخدم. 📱 متجاوب بالكامل: تصميم يركز على الجوال أولاً مع قائمة جانبية تضمن تجربة سلسة على جميع الأجهزة. 🎨 هوية بصرية مخصصة: يستخدم التصميم خط Rajdhani ولوحة ألوان مستوحاة من الفضاء لإضفاء طابع تقني قوي وحديث. 🚀 أداء محسن: الموقع محسن لسرعة التحميل ومُستضاف على Vercel المعروفة بأدائها العالي مع تطبيقات Next.js. 💡 الهدف وفلسفة التصميم باعتباره مشروعاً لمعرض الأعمال، كان الهدف الأساسي من Cyber Moon هو إبراز القدرات التقنية والتصميمية في سياق واقعي. استُلهم التوجه البصري من الفضاء، باستخدام درجات الأزرق الداكن والرمادي الناعم ولمسات ذهبية، لخلق واجهة نظيفة وعصرية ومبهرة للعملاء أو أصحاب العمل المحتملين. يمثل هذا المشروع نموذجاً عالي الدقة لما يمكنني تقديمه.\n🚀 عرض المشروع الموقع المباشر: cyber-moon.vercel.app\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-012/","section":"projects","summary":"نموذج أولي متجاوب لشركة تقنية خيالية، يبرز بنية معمارية قائمة على المكونات باستخدام Next.js، وتصميم متجاوب مع Tailwind CSS، وتحريكات تمرير أنيقة.","title":"القمر الرقمي: نموذج أولي لشركة ناشئة في مجال التكنولوجيا الخيالية"},{"content":"تم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\nما هي React.js؟ React.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\nتركز React فقط على طبقة العرض (View) من معمارية MVC، مما يجعلها خفيفة وسهلة الدمج مع مكتبات أو أطر عمل أخرى.\nالميزات الرئيسية في React 1. بنية قائمة على المكونات تشجع React على تطوير مكونات قابلة لإعادة الاستخدام، مما يعزز صيانة الكود وقابليته للتوسع. كل مكون يدير حالته الخاصة ويعرض نفسه بناءً على تلك الحالة.\n2. JSX – جافاسكريبت XML يتيح JSX للمطورين كتابة هياكل HTML مباشرة داخل جافاسكريبت، مما يجعل الكود أسهل قراءة وصيانة.\nconst Hello = () =\u0026gt; \u0026lt;h1\u0026gt;Hello, World!\u0026lt;/h1\u0026gt;; 3. DOM افتراضي تستخدم React DOM افتراضي لتتبع التغييرات وتحديث الأجزاء المتغيرة فقط من الواجهة بكفاءة، مما يؤدي إلى عرض أسرع وأداء أفضل.\n4. ربط بيانات باتجاه واحد تطبق React ربط بيانات باتجاه واحد، أي أن البيانات تتدفق من المكون الأب إلى الأبناء، مما يجعل إدارة البيانات أكثر قابلية للتنبؤ وأسهل في التصحيح.\n5. منظومة غنية تتمتع React بمنظومة غنية تشمل أدوات مثل React Router للتنقل، وRedux لإدارة الحالة، وNext.js للعرض من جهة الخادم.\nلماذا تستخدم React؟ الكفاءة: الـ DOM الافتراضي يحسن أداء العرض. التركيبية: المكونات القابلة لإعادة الاستخدام تؤدي إلى كود أنظف وأسهل في الصيانة. مجتمع ضخم: لدى React مجتمع مطورين واسع وتوثيقات ممتازة. فرص عمل: React مطلوبة بشدة في سوق العمل، ما يجعلها مهارة ذات قيمة عالية. كيف تبدأ مع React يمكنك البدء مع React بتثبيتها عبر npm:\nnpx create-react-app my-app cd my-app npm start سيتم إعداد بيئة تطوير متكاملة مع إعادة تحميل فوري، وفحص الكود، ودعم ميزات جافاسكريبت الحديثة.\nالخلاصة تمكن React.js المطورين من بناء واجهات مستخدم سريعة وقابلة للتوسع وتفاعلية. شعبيتها وتنوع استخداماتها يجعلها تقنية أساسية في تطوير الويب الحديث. إذا كنت تطمح لأن تصبح مطور واجهات أمامية أو تعزز مهاراتك في جافاسكريبت، فإن تعلم React أمر لا غنى عنه.\n","permalink":"http://localhost:1313/ar/blog/posts/reactjs-blog-post/","section":"blog","summary":"\u003cp\u003eتم تطوير React.js وصيانتها من قبل فيسبوك (حالياً Meta)، وأصبحت واحدة من أشهر مكتبات JavaScript لبناء تطبيقات الويب الحديثة. سواء كنت تطور موقع صفحة واحدة بسيط أو تطبيق ويب معقد، توفر React مجموعة أدوات قوية لإنشاء واجهات مستخدم ديناميكية ومتجاوبة.\u003c/p\u003e\n\u003ch2 id=\"ما-هي-reactjs\"\u003eما هي React.js؟\u003c/h2\u003e\n\u003cp\u003eReact.js هي مكتبة JavaScript مفتوحة المصدر تُستخدم لبناء واجهات المستخدم، خاصة لتطبيقات الصفحة الواحدة. فلسفتها الأساسية هي بنية المكونات، مما يسمح للمطورين ببناء أجزاء واجهة منفصلة وتجميعها معاً.\u003c/p\u003e","title":"React.js: عملاق الواجهات الأمامية الذي تحتاجه في 2025"},{"content":"Why Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀 !http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\nIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where Next.js, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\nOne Framework, So Many Ways to Render This is the killer feature. With Next.js, you\u0026rsquo;re not locked into one way of doing things. You get to choose the best rendering strategy for each page.\nStatic Site Generation (SSG): Perfect for pages that don\u0026rsquo;t change often, like a blog post or a product landing page. The page is built once and served instantly from a CDN. The result? Blazing-fast load times. Server-Side Rendering (SSR): Need to show user-specific data? SSR generates the page on the server for every request, ensuring the content is always fresh. It\u0026rsquo;s ideal for dashboards and user profiles. Incremental Static Regeneration (ISR): This is the best of both worlds. You can have a static page that automatically rebuilds itself in the background after a set time. Your site stays fast, but the content is never stale. Client-Side Rendering (CSR): Still want the classic single-page app experience? You can do that too, all within the same application. This hybrid approach means you can optimize every single part of your app for maximum performance and efficiency.\nتجربة تطوير أفضل للمبرمجين !http://googleusercontent.com/image_collection/image_retrieval/7573518744484272445\nNext.js مليء بالميزات التي تجعل حياتك كمطور أكثر سهولة ومتعة.\nتوجيه قائم على الملفات: انسَ مكتبات التوجيه المعقدة. تريد صفحة جديدة على /about؟ فقط أنشئ ملفاً باسم about.js في مجلد الصفحات. بهذه البساطة والوضوح. تحديث فوري: عدّل الكود وسترى التغيير في المتصفح فوراً دون فقدان حالة المكون. هذا يجعل التطوير وتصحيح الأخطاء سريعاً للغاية. تحسينات مدمجة: يأتي Next.js مع تحسين تلقائي للصور، وتقسيم الكود، والمزيد مباشرة من البداية. يتولى المهام الثقيلة لتتمكن من التركيز على بناء الميزات. أداء يبهر المستخدمين وجوجل !http://googleusercontent.com/image_collection/image_retrieval/7999868972524234138\nفي النهاية، كل شيء يتعلق بالأداء. المواقع البطيئة تخسر المستخدمين وتحتل ترتيباً سيئاً في محركات البحث. تم بناء Next.js من الأساس ليكون سريعاً.\nمن خلال استراتيجيات العرض الذكية والتحسينات التلقائية، يساعدك Next.js على بناء مواقع تحقق نتائج عالية في مؤشرات Google Core Web Vitals. هذا يؤدي إلى ترتيب SEO أفضل، والأهم من ذلك، مستخدمون أكثر رضا لأنهم لا ينتظرون تحميل الصفحات.\n!http://googleusercontent.com/image_collection/image_retrieval/1237750557036671416\nالخلاصة Next.js ليس مجرد موضة؛ بل هو الخطوة المنطقية التالية لتطوير الويب الجاد. يجمع بين قوة React وهندسة معمارية مدروسة تركز على الأداء وتحل مشاكل المطورين الحقيقية. إذا كنت تريد بناء تطبيقات ويب سريعة وقابلة للتوسع وحديثة دون متاعب التطوير المعتادة، فـ Next.js هو أفضل مكان للانطلاق.\n","permalink":"http://localhost:1313/ar/blog/posts/next.js-is-your-new-secret-weapon-for-building-awesome-web-apps/","section":"blog","summary":"\u003ch1 id=\"why-nextjs-is-your-new-secret-weapon-for-building-awesome-web-apps-\"\u003eWhy Next.js is Your New Secret Weapon for Building Awesome Web Apps 🚀\u003c/h1\u003e\n\u003cp\u003e!http://googleusercontent.com/image_collection/image_retrieval/12298402712055045150\u003c/p\u003e\n\u003cp\u003eIf you\u0026rsquo;re building a web application today, you\u0026rsquo;re juggling a lot. You need speed, great SEO, and a fantastic user experience, all without wanting to pull your hair out during development. This is where \u003cstrong\u003eNext.js\u003c/strong\u003e, the React framework, comes in and completely changes the game. It’s not just another tool; it’s a powerhouse that makes building sophisticated, high-performance web apps easier and faster.\u003c/p\u003e","title":"Next.js: سلاحك السري الجديد لبناء تطبيقات ويب مذهلة"},{"content":"قمت بتطوير موقع إلكتروني حديث ومتجاوب لشركة أبراج بلاتينيوم ذ.م.م.، الرائدة في تقديم حلول الألياف الضوئية والشبكات في سوريا. كان هدف المشروع إنشاء حضور رقمي احترافي يعرض خدماتهم التقنية المتقدمة ويعزز مكانتهم كلاعب رئيسي في قطاع البنية التحتية للاتصالات.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js أداة البناء: Vite التوجيه: React Router التحريكات: React Spring \u0026amp; React Typing Effect تصميم الواجهة: CSS3 النقي مع استعلامات الوسائط خدمة الخلفية: Web3Forms API (لنموذج التواصل) ✨ الميزات الرئيسية 📱 تصميم متجاوب بالكامل: يتكيف التصميم مع جميع أحجام الشاشات، مع قائمة تنقل جانبية أنيقة وقابلة للتبديل لتجربة مثالية على الجوال. 🎨 شريط تنقل ديناميكي: شريط تنقل ثابت يتحول من شفاف إلى خلفية صلبة عند التمرير، لضمان سهولة التنقل. 💼 نموذج تواصل فعال: نموذج تواصل يعمل بكفاءة يلتقط بيانات المستخدم ويرسلها مباشرة إلى بريد الإدارة باستخدام Web3Forms API. 🎬 مشغل فيديو مدمج: مشغل فيديو يظهر كنافذة منبثقة من قسم \u0026ldquo;من نحن\u0026rdquo;، لعرض محتوى مرئي تفاعلي دون مغادرة الصفحة. 💨 تمرير سلس: تم استخدام مكتبة react-scroll لتفعيل التمرير السلس عند النقر على روابط التنقل. 🖼️ أقسام تفاعلية: يحتوي الموقع على عدة أقسام تفاعلية، منها معرض صور أنيق بأربع أعمدة، وسلايدر شهادات العملاء، وبطاقات برامج تفاعلية عند المرور عليها. 💡 هدف المشروع كان الهدف الأساسي هو إنشاء واجهة رقمية احترافية توضح بوضوح خدمات أبراج بلاتينيوم المتخصصة في قطاع الألياف الضوئية. تم تصميم الموقع لتعزيز علامتهم التجارية كقائد تقني حديث وموثوق، وتوفير نقطة تواصل واضحة للعملاء المحتملين الباحثين عن حلول شبكات.\n🚀 عرض المشروع الموقع المباشر: abrajplatinum.com\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-01/","section":"projects","summary":"تم تطوير موقع إلكتروني عصري واحترافي لشركة متخصصة في حلول الألياف الضوئية والشبكات، بهدف إبراز خبراتهم التقنية وتعزيز حضورهم الرقمي.","title":"أبراج بلاتينوم: موقع لحلول الألياف الضوئية"},{"content":"رويال بلاتينيوم هو موقع واجهات وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم تطويره كتطبيق صفحة واحدة متجاوب بالكامل. ركز هذا المشروع النموذجي على ترجمة تصميم Figma الاحترافي إلى موقع عالي الأداء، مع إبراز بنية مكونات نظيفة وتنسيق دقيق باستخدام Tailwind CSS.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: Tailwind CSS أداة البناء: Vite اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🎨 تصميم دقيق مطابق للأصل: تم تنفيذ التصميم بعناية ليطابق تصميم Figma الأصلي، مع صور عالية الجودة وتدرجات أنيقة وواجهة داكنة نظيفة تعكس الاحترافية والثقة. 🧱 مكونات قابلة لإعادة الاستخدام: تم بناء الموقع على أساس مكونات قابلة لإعادة الاستخدام لإحصائيات الأعمال، والميزات، وشهادات العملاء وغيرها، لضمان كود نظيف وسهل الصيانة. 📱 متجاوب بالكامل: تم تحسينه لجميع الأجهزة مع نهج التصميم للجوال أولاً. تتقلص قائمة التنقل بسلاسة إلى قائمة قابلة للتبديل على الشاشات الصغيرة لتجربة استخدام بديهية. 🚀 سير عمل فعال: تم تطويره باستخدام أداة البناء Vite السريعة جداً لتقليل الاعتماديات وتسريع دورة التطوير. 📈 بيانات مركزية: تتم إدارة جميع المحتويات الثابتة مثل روابط التنقل ووصف الميزات في ملف ثابت مركزي، مما يجعل تحديث الموقع وصيانته سهلاً. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو إثبات القدرة على تحويل تصميم عالي الدقة من Figma إلى تطبيق ويب متكامل الوظائف، متجاوب وجذاب بصرياً. يمثل هذا العمل إضافة قوية لمحفظة الأعمال، ويبرز أحدث ممارسات تطوير الواجهات الأمامية، والاهتمام الدقيق بتفاصيل تجربة المستخدم، وإتقان React.js وTailwind CSS.\n🚀 عرض المشروع الموقع المباشر: royalplatinum.surge.sh\rكود المصدر: مستودع GitHub لهذا المشروع خاص حفاظاً على سرية العميل. يمكن توفير الوصول عند الطلب. ","permalink":"http://localhost:1313/ar/projects/ya7-project-company-02/","section":"projects","summary":"موقع واجهات مستخدم وتجربة مستخدم عصري وأنيق لشركة خدمات مالية، تم بناؤه باستخدام React.js وTailwind CSS لترجمة تصميم Figma إلى موقع متجاوب ودقيق التفاصيل.","title":"رويال بلاتينوم: تصميم موقع لشركة خدمات مالية"},{"content":"OllieBites هو موقع ثابت متجاوب بالكامل تم تطويره كنموذج أولي حديث لعلامة وجبات سريعة. بصفتي المطور والمصمم الوحيد، تم بناء هذا المشروع بالكامل من الصفر، بدءاً من الفكرة والعلامة التجارية وصولاً إلى النشر النهائي.\n🛠️ التقنيات المستخدمة الإطار الأساسي: React.js تصميم الواجهة: CSS وReactstrap الخرائط: Leaflet.js اللغة: JavaScript (ES6+) النشر: Netlify مع تكامل GitHub ✨ الميزات الرئيسية 🗺️ خرائط تفاعلية: تم دمج Leaflet.js لعرض مواقع المطاعم على خريطة ديناميكية وتفاعلية، مما يعزز تجربة المستخدم في البحث عن الفروع. 🎨 تصميم مخصص بالكامل: مسؤول عن تصميم واجهات وتجربة المستخدم بالكامل، والعلامة البصرية، وإنشاء المحتوى بما في ذلك الشعار والصور المخصصة. 📱 متجاوب بالكامل: تم بناؤه بنهج الجوال أولاً باستخدام Reactstrap لضمان تخطيط سلس وجذاب على جميع الأجهزة من الحواسيب إلى الهواتف الذكية. 🎬 سلايدر رئيسي جذاب: تتضمن الصفحة الرئيسية سلايدر ديناميكي لجذب انتباه المستخدم مباشرة بمحتوى ترويجي. 📈 تحسين محركات البحث: تم تطبيق أفضل ممارسات تحسين محركات البحث الأساسية لزيادة الظهور وسهولة البحث. 💡 هدف المشروع كان الهدف من هذا المشروع بناء نموذج أولي متكامل وجاهز للإنتاج لسلسلة مطاعم وجبات سريعة. يوضح هذا العمل تنفيذ المشروع من البداية للنهاية، بما في ذلك التصميم والتطوير والنشر. وقد كان بمثابة تمرين شامل لإنشاء تطبيق ويب يركز على المستخدم ويتميز بجاذبية بصرية من الصفر.\n🚀 عرض المشروع الموقع المباشر: oillebites.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-002/","section":"projects","summary":"نموذج أولي متجاوب بالكامل لعلامة وجبات سريعة، تم تصميمه وتطويره من الصفر. يتضمن خرائط تفاعلية باستخدام Leaflet.js وتصميم واجهات وتجربة مستخدم مخصص بالكامل.","title":"أولي-بايتس: نموذج أولي لموقع سلسلة وجبات سريعة"},{"content":"Brushstrokes هو نموذج أولي لمتجر إلكتروني متجاوب بالكامل صُمم لعلامة تجميل فاخرة. تم تطوير هذا الموقع الثابت من الصفر ليعرض واجهة متجر أنيقة ونظيفة، مع قوائم منتجات وصفحات تفاصيل شاملة لخلق تجربة تسوق متكاملة وسهلة الاستخدام.\n🛠️ التقنيات المستخدمة المكتبة الأساسية: React.js تصميم الواجهة: CSS3 مخصص إدارة البيانات: JSON الترميز: HTML5 اللغة: JavaScript (ES6+) ✨ الميزات الرئيسية 🛍️ واجهة متجر إلكتروني: تتضمن جميع مكونات التجارة الإلكترونية الأساسية مثل شبكات عرض المنتجات وصفحات التفاصيل. 📄 محتوى مدعوم بـ JSON: يتم تحميل معلومات المنتجات (الأسماء، الأسعار، الوصف) ديناميكياً من ملف JSON محلي، مما يوضح إدارة البيانات الثابتة في تطبيق React. 📱 متجاوب بالكامل: تم تنسيقه بعناية لضمان تجربة سلسة على جميع الأجهزة من الشاشات الكبيرة إلى الهواتف المحمولة. 🎨 تصميم مخصص: تم تصميم وتطوير واجهة المستخدم وتجربة المستخدم بالكامل من الصفر، لخلق هوية علامة تجارية فريدة وجذابة للمتجر. 💨 تحريكات ديناميكية: تم تطبيق تحريكات وانتقالات ناعمة باستخدام CSS لتعزيز تفاعل المستخدم وإضفاء طابع عصري واحترافي. 💡 هدف المشروع كان الهدف الأساسي من هذا المشروع هو بناء نموذج أولي عملي وجذاب بصرياً لموقع تجارة إلكترونية لمنتجات العناية بالبشرة. يوضح هذا العمل القدرة على هيكلة وتطوير تطبيق React يدير بيانات المنتجات محلياً، مع التركيز على واجهة مستخدم عالية الجودة ومتجاوبة لتحسين تجربة التسوق للعملاء.\n🚀 عرض المشروع الموقع المباشر: brushstrokes.surge.sh\rكود المصدر: مستودع GitHub\r","permalink":"http://localhost:1313/ar/projects/ya7-project-prototype-01/","section":"projects","summary":"نموذج أولي لمتجر إلكتروني متجاوب لعلامة تجميل، تم تطويره باستخدام React.js ويعرض منتجات وصفحات تفاصيل تعتمد على بيانات JSON.","title":"برش-ستروكس: نموذج أولي لمتجر منتجات العناية بالبشرة"}]