{{- define "main" }}

{{- if (and site.Params.profileMode.enabled .IsHome) }}
  {{- partial "index_profile.html" . }}

{{- else }} {{/* if not profileMode */}}

  {{- if not .IsHome | and .Title }}
  <header class="page-header">
    {{- partial "breadcrumbs.html" . }}
    <h1>
      {{ .Title }}
      {{- if and (or (eq .Kind `term`) (eq .Kind `section`)) (.Param "ShowRssButtonInSectionTermList") }}
        {{- with .OutputFormats.Get "rss" }}
        <a href="{{ .RelPermalink }}" title="RSS" aria-label="RSS">
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"
            stroke-linecap="round" stroke-linejoin="round" height="23">
            <path d="M4 11a9 9 0 0 1 9 9" />
            <path d="M4 4a16 16 0 0 1 16 16" />
            <circle cx="5" cy="19" r="1" />
          </svg>
        </a>
        {{- end }}
      {{- end }}
    </h1>
    {{- if .Description }}
    <div class="post-description">
      {{ .Description | markdownify }}
    </div>
    {{- end }}
  </header>
  {{- end }}

  {{- if .Content }}
  <div class="post-content">
    {{- if not (.Param "disableAnchoredHeadings") }}
      {{- partial "anchored_headings.html" .Content -}}
    {{- else }}{{ .Content }}{{ end }}
  </div>
  {{- end }}

  {{- $pages := union .RegularPages .Sections }}

  {{- if .IsHome }}
    {{- $pages = where site.RegularPages "Type" "in" site.Params.mainSections }}
    {{- $pages = where $pages "Params.hiddenInHomeList" "!=" "true"  }}
  {{- end }}

  {{- $paginator := .Paginate $pages }}

  {{- if and .IsHome site.Params.homeInfoParams (eq $paginator.PageNumber 1) }}
    {{- partial "home_info.html" . }}
  {{- end }}

  <!-- FILTER BUTTONS SECTION -->
  <section class="filters" style="margin-bottom: 2rem;">
    <strong>Filter by Category:</strong>
    <button class="filter-btn" data-category="all">All</button>
    {{ range $name, $_ := .Site.Taxonomies.categories }}
      <button class="filter-btn" data-category="{{ $name | urlize }}">{{ $name }}</button>
    {{ end }}

    <strong style="margin-left:2rem;">Filter by Tag:</strong>
    <button class="filter-btn" data-tag="all">All</button>
    {{ range $name, $_ := .Site.Taxonomies.tags }}
      <button class="filter-btn" data-tag="{{ $name | urlize }}">{{ $name }}</button>
    {{ end }}
  </section>

  <!-- POSTS LIST -->
  <section class="posts">
    {{- range $index, $page := $paginator.Pages }}

      {{- $class := "post-entry" }}

      {{- $user_preferred := or site.Params.disableSpecial1stPost site.Params.homeInfoParams }}

      {{- if (and $.IsHome (eq $paginator.PageNumber 1) (eq $index 0) (not $user_preferred)) }}
        {{- $class = "first-entry" }}
      {{- else if .Data.Term }}
        {{- $class = "post-entry tag-entry" }}
      {{- end }}

      <!-- get first category for filtering -->
      {{- $cat := "" }}
      {{- with index .Params.categories 0 }}
        {{- $cat = . | urlize }}
      {{- end }}

      {{- $tags := slice }}
      {{- with .Params.tags }}
        {{- range . }}
          {{- $tags = $tags | append (urlize .) }}
        {{- end }}
      {{- end }}
      <article class="{{ $class }} post-card" data-category="{{ $cat }}" data-tags="{{ delimit $tags "," }}">
        {{- $isHidden := (.Param "cover.hiddenInList") | default (.Param "cover.hidden") | default false }}
        {{- partial "cover.html" (dict "cxt" . "IsSingle" false "isHidden" $isHidden) }}

        <header class="entry-header">
          <h2 class="entry-hint-parent">
            {{- .Title }}
            {{- if .Draft }}
              <span class="entry-hint" title="Draft">
                <svg xmlns="http://www.w3.org/2000/svg" height="20" viewBox="0 -960 960 960" fill="currentColor">
                  <path
                    d="M160-410v-60h300v60H160Zm0-165v-60h470v60H160Zm0-165v-60h470v60H160Zm360 580v-123l221-220q9-9 20-13t22-4q12 0 23 4.5t20 13.5l37 37q9 9 13 20t4 22q0 11-4.5 22.5T862.09-380L643-160H520Zm300-263-37-37 37 37ZM580-220h38l121-122-18-19-19-18-122 121v38Zm141-141-19-18 37 37-18-19Z" />
                </svg>
              </span>
            {{- end }}
          </h2>
        </header>

        {{- if (ne (.Param "hideSummary") true) }}
          <div class="entry-content">
            <p>{{ .Summary | plainify | htmlUnescape }}{{ if .Truncated }}...{{ end }}</p>
          </div>
        {{- end }}

        {{- if not (.Param "hideMeta") }}
          <footer class="entry-footer">
            {{- partial "post_meta.html" . -}}
          </footer>
        {{- end }}

        <a class="entry-link" aria-label="post link to {{ .Title | plainify }}" href="{{ .Permalink }}"></a>
      </article>

    {{- end }}
  </section>

  {{- if gt $paginator.TotalPages 1 }}
    <footer class="page-footer">
      <nav class="pagination">
        {{- if $paginator.HasPrev }}
          <a class="prev" href="{{ $paginator.Prev.URL | absURL }}">
            «&nbsp;{{ i18n "prev_page" }}&nbsp;
            {{- if (.Param "ShowPageNums") }}
              {{- sub $paginator.PageNumber 1 }}/{{ $paginator.TotalPages }}
            {{- end }}
          </a>
        {{- end }}
        {{- if $paginator.HasNext }}
          <a class="next" href="{{ $paginator.Next.URL | absURL }}">
            {{- i18n "next_page" }}&nbsp;
            {{- if (.Param "ShowPageNums") }}
              {{- add 1 $paginator.PageNumber }}/{{ $paginator.TotalPages }}
            {{- end }}&nbsp;»
          </a>
        {{- end }}
      </nav>
    </footer>
  {{- end }}

  <!-- FILTER SCRIPT -->
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const catButtons = document.querySelectorAll('.filter-btn[data-category]');
      const tagButtons = document.querySelectorAll('.filter-btn[data-tag]');
      const posts = document.querySelectorAll('.post-card');

      let activeCategory = 'all';
      let activeTag = 'all';

      function filterPosts() {
        posts.forEach(post => {
          const postCat = post.dataset.category;
          const postTags = post.dataset.tags ? post.dataset.tags.split(',') : [];
          const catMatch = (activeCategory === 'all' || postCat === activeCategory);
          const tagMatch = (activeTag === 'all' || postTags.includes(activeTag));
          post.style.display = (catMatch && tagMatch) ? 'block' : 'none';
        });
      }

      catButtons.forEach(btn => {
        btn.addEventListener('click', () => {
          activeCategory = btn.dataset.category;
          filterPosts();
        });
      });

      tagButtons.forEach(btn => {
        btn.addEventListener('click', () => {
          activeTag = btn.dataset.tag;
          filterPosts();
        });
      });
    });
  </script>

  <!-- FILTER STYLE -->
  <style>
    .filter-btn {
      margin-right: 10px;
      padding: 8px 12px;
      background-color: #eee;
      border: none;
      border-radius: 5px;
      cursor: pointer;
    }
    .filter-btn:hover {
      background-color: #ddd;
    }
    .post-card {
      margin-bottom: 2rem;
      border-bottom: 1px solid #ccc;
      padding-bottom: 1rem;
    }
  </style>

{{- end }} {{/* end profileMode */}}

{{- end }} {{/* end main */}}
